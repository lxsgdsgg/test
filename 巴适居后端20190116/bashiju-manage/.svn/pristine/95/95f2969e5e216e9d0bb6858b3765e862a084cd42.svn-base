package com.bashiju.manage.service.impl;

import java.util.Date;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bashiju.cert.interceptors.DataAuthHelper;
import com.bashiju.enums.MenuEnum;
import com.bashiju.manage.mapper.PhoneBlacklistMapper;
import com.bashiju.manage.service.PhoneBlacklistService;
import com.bashiju.utils.log.ExecutionResult;
import com.bashiju.utils.log.SystemServiceLog;
import com.bashiju.utils.service.CommonSqlServie;
import com.bashiju.utils.threadlocal.UserThreadLocal;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
/**
 * 
 * @ClassName:  PhoneBlacklistServiceImpl   
 * @Description:TODO(电话黑名单服务)   
 * @author: wangpeng
 * @date:   2018年6月29日 下午6:07:58   
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Service
@SystemServiceLog(sourceType="电话黑明单")
public class PhoneBlacklistServiceImpl extends CommonSqlServie  implements PhoneBlacklistService{
	@Autowired
	private PhoneBlacklistMapper phoneBlacklistMapper;
	@Autowired
	private DataAuthHelper dataAuthHelper;
	
	@Override
	@SystemServiceLog(operationType="查询电话黑名单")
	public Page<Map<String, Object>> queryPhoneBlacklist(String keyWord,int page,int limit) {
		PageHelper.startPage(page, limit);
		dataAuthHelper.auth(MenuEnum.MENU_73.getCode(), UserThreadLocal.get().get("id").toString());
		Page<Map<String, Object>> map = phoneBlacklistMapper.queryPhoneBlacklist(keyWord);
		return map;
	}
	
	@Override
	@SystemServiceLog(operationType="查询是否已有电话")
	public boolean queryMobileIsExist(String mobile) {
		long result=phoneBlacklistMapper.queryMobileIsExist(mobile);
		if(result>0) {
			return true;
		}
		return false;
	}

	@Override
	@SystemServiceLog(operationType="新增电话黑名单")
	public boolean saveOrUpdatePhoneBlacklist(Map<Object, Object> paramMap) {
		if(!paramMap.containsKey("id")||StringUtils.isEmpty(paramMap.get("id").toString())||paramMap.get("id") == null) {
			//新增
			paramMap.put("permissionArea", UserThreadLocal.get().get("deptId"));
			paramMap.put("addTime", new Date());
			paramMap.put("operatorId",UserThreadLocal.get().get("id"));
			paramMap.put("operator",UserThreadLocal.get().get("realName"));
			long result = this.commonOperationDatabase(paramMap, "sys_phoneblacklist", false);
			if(result>0) {
				ExecutionResult.descFormat(Long.toString(result), "新增电话黑名单");
				return true;
			}
			return false;
		}else {
			//修改
			long result = this.commonOperationDatabase(paramMap, "sys_phoneblacklist", "id", false);
			if(result>0) {
				ExecutionResult.descFormat(Long.toString(result), "修改电话黑名单");
				return true;
			}	
			return false;
		}
	}

	
	@Override
	@SystemServiceLog(operationType="逻辑删除电话黑名单")
	public boolean deletePhoneBlack(String id) {
		boolean  result = this.delData("sys_phoneblacklist", id, "id", false);
		if(result)
			return true;
		return false;
	}
}
