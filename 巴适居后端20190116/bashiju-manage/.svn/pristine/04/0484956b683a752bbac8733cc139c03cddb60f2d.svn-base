/**  
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  CityOpenInfoServiceImpl.java   
 * @Package com.bashiju.manage.service.impl   
 * @Description:    TODO(用一句话描述该文件做什么)   
 * @author: yangz     
 * @date:   2018年7月23日 上午9:27:19   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/
package com.bashiju.manage.service.impl;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bashiju.cert.interceptors.DataAuthHelper;
import com.bashiju.manage.mapper.CityOpenInfoMapper;
import com.bashiju.manage.service.CityOpenInfoService;
import com.bashiju.utils.exception.BusinessException;
import com.bashiju.utils.log.ExecutionResult;
import com.bashiju.utils.log.SystemServiceLog;
import com.bashiju.utils.service.CommonSqlServie;
import com.bashiju.utils.threadlocal.UserThreadLocal;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;

/**   
 * @ClassName:  CityOpenInfoServiceImpl   
 * @Description:平台城市开通服务
 * @author: yangz
 * @date:   2018年7月23日 上午9:27:19   
 *     
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Service
@SystemServiceLog(sourceType="平台城市开通")
public class CityOpenInfoServiceImpl extends CommonSqlServie implements CityOpenInfoService {
	
	@Autowired
	private CityOpenInfoMapper cityOpenInfoMapper;
	@Autowired
	private DataAuthHelper DataAuthHelper;

	/**     
	 * @Description: 条件查询开通城市信息   
	 * @param provinceCode 省级行政区域
	 * @param cityCode 市级行政区域
	 * @return: List<Map<String,Object>>
	 * @see com.bashiju.manage.service.CityOpenInfoService#queryCityOpenInfos(java.lang.String, java.lang.String)   
	 */
	@Override
	public List<Map<String, Object>> queryCityOpenInfos(String provinceCode, String cityCode) {
		//TODO:授权逻辑未完成
		DataAuthHelper.auth("1", UserThreadLocal.get().get("id").toString());
		return cityOpenInfoMapper.queryCityOpenInfos(provinceCode, cityCode);
	}
	
	/**     
	 * @Description: 条件查询开通城市信息   
	 * @param provinceCode 省级行政区域
	 * @param cityCode 市级行政区域
	 * @param pageNum 当前页
	 * @param pageSize 每页显示的条数
	 * @return: Page<Map<String,Object>>      
	 * @see com.bashiju.manage.service.CityOpenInfoService#queryCityOpenInfos(java.lang.String, java.lang.String, int, int)   
	 */
	@Override
	public Page<Map<String, Object>> queryCityOpenInfos(String provinceCode, String cityCode, int pageNum,
			int pageSize) {
		PageHelper.startPage(pageNum, pageSize);
		Page<Map<String,Object>> page = (Page<Map<String, Object>>) this.queryCityOpenInfos(provinceCode, cityCode);
		return page;
	}

	/**     
	 * @Description: 保存城市开通信息  
	 * @param map 待保存的开通信息
	 * @return: boolean   
	 * @see com.bashiju.manage.service.CityOpenInfoService#saveCityOpen(java.util.Map)   
	 */
	@Override
	@SystemServiceLog(operationType="保存城市开通")
	public boolean saveCityOpen(Map<Object, Object> map) {
		if(map==null || map.size()<=0)
			throw new BusinessException("没有要保存的开通信息");
		if(!map.containsKey("cityCode") || map.get("cityCode")==null || StringUtils.isEmpty(map.get("cityCode").toString()))
			throw new BusinessException("城市编码不允许为空");
		//验证该城市平台信息是否已经存在
		List<Map<String,Object>> list = this.queryCityOpenInfos(null, map.get("cityCode").toString());
		if(list!=null && list.size()>0)
			throw new BusinessException("该城市已经开通，不需要再次开通");
		long id = this.commonOperationDatabase(map, "sys_cityOpenInfo", false);
		ExecutionResult.descFormat(Long.toString(id), "保存城市开通");
		return true;
	}

	/**     
	 * @Description: 取消城市开通   
	 * @param id 待取消的城市开通信息编号
	 * @return: boolean    
	 * @see com.bashiju.manage.service.CityOpenInfoService#cancelCityOpen(java.lang.String)   
	 */
	@Override
	@SystemServiceLog(operationType="取消城市开通")
	public boolean cancelCityOpen(String id) {
		if(StringUtils.isEmpty(id))
			return false;
		boolean result = this.delData("sys_cityOpenInfo", "id", id, false);
		ExecutionResult.descFormat(id, "取消城市开通");
		return result;
	}

}
