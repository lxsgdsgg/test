package com.bashiju.manage.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.bashiju.manage.service.DeptTypeService;
import com.bashiju.utils.exception.BusinessException;
import com.bashiju.utils.exception.ErrorCodeEnum;
import com.bashiju.utils.service.BaseController;
import com.bashiju.utils.threadlocal.UserThreadLocal;
import com.bashiju.utils.util.BashijuResult;
import com.github.pagehelper.Page;


/**
 * 
 * @ClassName:  DeptTypeController   
 * @Description:部门类型控制层
 * @author: wangpeng
 * @date:   2018年4月24日 下午12:11:25   
 *     
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Controller
@RequestMapping(value="deptType")
public class DeptTypeController extends BaseController {
	
	
	@Autowired
	private DeptTypeService deptTypeService;
	
	
	
	/**
	 * 
	 * @Title: enterDetyTypePage   
	 * @Description:进入部门类型页面
	 * @param request
	 * @param response
	 * @return      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="enterDetyTypePage")
	public ModelAndView enterDetyTypePage(HttpServletRequest request,HttpServletResponse response) {
		ModelAndView mv=getModelAndView(request, response, "deptType/deptType");
		return mv;
		
	}
	
	
	/**
	 * 
	 * @Title: deptTypeListPage   
	 * @Description: 通过部门类型id或部门类型名称查询部门信息  
	 * @param request
	 * @param response
	 * @param id 部门类型id
	 * @param name 部门类型名称
	 * @return
	 * @throws Exception      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="deptTypeListPage")
	@ResponseBody
	public Object deptTypeListPage(HttpServletRequest request,HttpServletResponse response, String deptTypeName,int page,int limit) throws Exception {
		 Page<Map<String, Object>>pages= deptTypeService.queryDeptTypeList(deptTypeName, page, limit);
		 Map<String,Object> map = getPageResult(pages);
		 return JSONObject.toJSON(map);
	}

	
	/**
	 * 
	 * @Title: updateIsvalid   
	 * @Description: 逻辑删除部门类型   
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception      
	 * @return: BashijuResult
	 */
	@RequestMapping(value="delDeptType")
	@ResponseBody
	public BashijuResult delDeptType(HttpServletRequest request,HttpServletResponse response)throws Exception{
		String deptTypeId=request.getParameter("deptTypeId");
		
		boolean result=this.deptTypeService.delDeptType(deptTypeId);
		if(result)
			return BashijuResult.ok();
		else 
			throw new BusinessException(ErrorCodeEnum.SYSTEM_DEL_ERROR);
	}
	
	/**
	 * 
	 * @Title: deptTypeUpdate   
	 * @Description: 进入部门类型编辑页面  
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="deptTypeDetail")
	public ModelAndView deptTypeUpdate(HttpServletRequest request,HttpServletResponse response)  throws Exception{
		ModelAndView mv=getModelAndView(request, response, "deptType/deptTypeDetail");
		String id=request.getParameter("deptTypeId");
		if(!StringUtils.isEmpty(id)){
			//通過id查找部門信息
			Map<String,Object> list=deptTypeService.queryDeptTypeById(id);
			mv.addObject("datas",JSON.toJSON(list));
		}
		//查询所有上级部门名称
		List<Map<String, Object>>deptTypeName= deptTypeService.queryAllDeptTypes();
		if(deptTypeName!=null&&deptTypeName.size()>0){
			mv.addObject("deptTypeName", JSON.toJSON(deptTypeName));
		}
		return mv;
	}

	
	
	/**
	 * 
	 * @Title: saveOrUpdateDeptType   
	 * @Description: 部门类型保存或添加方法
	 * @param request
	 * @return      
	 * @return: BashijuResult
	 */
	@SuppressWarnings("unchecked")
	@RequestMapping(value="saveOrUpdateDeptType")
	@ResponseBody
	public BashijuResult saveOrUpdateDeptType(HttpServletRequest request,String jsonData) {
		
		if(StringUtils.isEmpty(jsonData))
			return BashijuResult.build(false, "没有要保存的数据");
		//转换格式
		Map<Object,Object> map = (Map<Object, Object>) JSONObject.parse(jsonData);
		map.put("permissionArea", UserThreadLocal.get().get("deptId"));
		map.put("operatorId", UserThreadLocal.get().get("id"));
		boolean result;
		result=this.deptTypeService.saveOrUpdateDeptType(map);
		//如果没有传入id就为添加操作，如果有那么就是编辑操作
		if(result)
			return BashijuResult.ok();
		else
			throw new BusinessException(ErrorCodeEnum.SYSTEM_UPFDATE_ERROR);
	}

}
