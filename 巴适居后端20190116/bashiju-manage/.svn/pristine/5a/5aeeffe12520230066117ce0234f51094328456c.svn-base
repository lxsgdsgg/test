package com.bashiju.manage.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONObject;
import com.bashiju.manage.service.PostService;
import com.bashiju.utils.exception.BusinessException;
import com.bashiju.utils.exception.ErrorCodeEnum;
import com.bashiju.utils.service.BaseController;
import com.bashiju.utils.threadlocal.UserThreadLocal;
import com.bashiju.utils.util.BashijuResult;
import com.github.pagehelper.Page;


/**
 * 
 * @ClassName:  PostController   
 * @Description:职位控制层   
 * @author: wangpeng
 * @date:   2018年4月24日 下午3:34:32   
 *     
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Controller
@RequestMapping(value="post")
public class PostController extends BaseController{
	
	@Autowired
	private PostService postService;
	
	/**
	 * 
	 * @Title: postPge   
	 * @Description: 进入职位页面（post.jsp）   
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="postPageList")
	public ModelAndView postPge(HttpServletRequest request,HttpServletResponse response) throws Exception {
		ModelAndView mv=getModelAndView(request, response, "post/post");
		return mv;
	}
	
	/**
	 * 
	 * @Title: addPostPage   
	 * @Description: 进入职位添加页面  
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="addPostPage")
	@ResponseBody
	public ModelAndView addPost(HttpServletRequest request,HttpServletResponse response) throws Exception {
		
		ModelAndView mv=getModelAndView(request, response, "post/post-add");
		
		return mv;
	}		
	/**
	 * 
	 * @Title: getPost   
	 * @Description: 获取职位信息  
	 * @param request
	 * @return      
	 * @return: Object
	 */
	@RequestMapping(value="getPost")
	@ResponseBody
	public Object getPost(HttpServletRequest request,String postName,int page,int limit ){
		Page<Map<String,Object>> pages =postService.queryPost(postName, page, limit);
		Map<String,Object> map = getPageResult(pages);
		return JSONObject.toJSON(map);
	}
	
	/**
	 * 
	 * @Title: deletePost   
	 * @Description: 通过id逻辑删除职位      
	 * @param request
	 * @param response
	 * @param postId 职位id
	 * @return      
	 * @return: BashijuResult
	 */
	@RequestMapping(value="deletePost")
	@ResponseBody
	public BashijuResult deletePost(HttpServletRequest request,HttpServletResponse response,String postId) {
		boolean result= this.postService.delPost(postId);
		if(result)
			return BashijuResult.ok();
		else 
			throw new BusinessException(ErrorCodeEnum.SYSTEM_DEL_ERROR);
	}
	
	/**
	 * 
	 * @Title: updatePostName   
	 * @Description: 编辑和添加 方法  
	 * @param postId 职位id
	 * @param postName 职位名称
	 * @throws Exception      
	 * @return: BashijuResult
	 */
	@SuppressWarnings("unchecked")
	@RequestMapping(value="saveOrUpdatePost")
	@ResponseBody
	public BashijuResult saveOrUpdatePost(String jsonData){
		if(StringUtils.isEmpty(jsonData))
			throw new BusinessException("保存参数不能为空");
		Map<Object,Object> paramMap = (Map<Object, Object>) JSONObject.parse(jsonData);
		boolean result=this.postService.saveOrUpdatePost(paramMap);
		if(result)
			return BashijuResult.ok();
		else
			throw new BusinessException(ErrorCodeEnum.SYSTEM_UPFDATE_ERROR);
	}

}
