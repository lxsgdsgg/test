package com.bashiju.manage.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.bashiju.enums.ExamineStatusEnum;
import com.bashiju.enums.HouseArticleTypeEnum;
import com.bashiju.enums.RoleGroupEnum;
import com.bashiju.manage.service.ContentmanageService;
import com.bashiju.manage.service.HousePropertyArticleClassesService;
import com.bashiju.manage.service.impl.HousePropertyArticleClassesServiceImpl;
import com.bashiju.utils.exception.BusinessException;
import com.bashiju.utils.exception.ErrorCodeEnum;
import com.bashiju.utils.threadlocal.UserThreadLocal;
import com.bashiju.utils.util.BashijuResult;
import com.github.pagehelper.Page;
/**
 * 
 * @ClassName:  ContentmanageController   
 * @Description:TODO(内容管理)   
 * @author: liwen
 * @date:   2018年7月20日 上午10:02:36   
 *     
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Controller
public class ContentmanageController {
	
	@Autowired
	ContentmanageService contentmanageService;
	@Autowired
	HousePropertyArticleClassesService housePropertyArticleClassesService;
	
	@RequestMapping("/contentmanage/{pageName}")
	public String toPage(HttpServletRequest request,HttpServletResponse response,Model m,@PathVariable("pageName") String pageName){
		String userId = UserThreadLocal.get().get("id").toString();
		if("information".equals(pageName) || "encyclopedias".equals(pageName)) {
			String type = "";
			if("information".equals(pageName)) {
				type = HouseArticleTypeEnum.PROPERTYINFORMATION.getCode();//资讯
			}else if("encyclopedias".equals(pageName)) {
				type = HouseArticleTypeEnum.PROPERTYENCYCLOPEDIA.getCode();//百科
			}
			
			//查出全部文章类型
			List<Map<String, Object>> articleClassList = housePropertyArticleClassesService.queryHousePropertyArticleClassesByTypeAndCityCode(type,"");
			//查出用户所能操作的城市
			List<Map<String, Object>> cityList = contentmanageService.queryCity(Long.parseLong(userId));
			m.addAttribute("cityList", cityList);
			m.addAttribute("articleClassList", JSON.toJSONString(articleClassList));
		}
		
		m.addAttribute("userId", userId);
		return "contentmanage/"+pageName;
		
	}
	
	
	//资讯
	@RequestMapping("/getInformationBaseInfo")
	@ResponseBody
	public BashijuResult getInformationBaseInfo(){
		String type = HouseArticleTypeEnum.PROPERTYINFORMATION.getCode();//资讯
		Map<String,Object> info = getBaseInfo(type);
		return BashijuResult.ok(info);
	}
	
	//百科
	@RequestMapping("/getEncyclopediasBaseInfo")
	@ResponseBody
	public BashijuResult getEncyclopediasBaseInfo(){
		String type = HouseArticleTypeEnum.PROPERTYENCYCLOPEDIA.getCode();//百科
		Map<String,Object> info = getBaseInfo(type);
		return BashijuResult.ok(info);
	}
	
	public Map<String,Object> getBaseInfo(String type){
		//查出全部文章类型
		//Map<String, Object> articleClassList = housePropertyArticleClassesService.queryHousePropertyArticleClassesByTypeAndCityCode(type);
		String userId = UserThreadLocal.get().get("id").toString();
		//查出用户所能操作的城市
		List<Map<String, Object>> cityList = contentmanageService.queryCity(Long.parseLong(userId));
		Map<String,Object> info = new HashMap<>();
		//info.put("articleClassInfo", articleClassList);
		info.put("cityInfo", cityList);
		info.put("examineStatus", ExamineStatusEnum.enumMap);
		return info;
	}
	
	//百科
	@RequestMapping("/getEncyclopediasClasse")
	@ResponseBody
	public Object getEncyclopediasClasse(String cityCode){
		String type = HouseArticleTypeEnum.PROPERTYENCYCLOPEDIA.getCode();//百科
		//根据城市查出全部文章类型
		List<Map<String, Object>> articleClassList = housePropertyArticleClassesService.queryHousePropertyArticleClassesByTypeAndCityCode(type,cityCode);
		//return BashijuResult.ok(articleClassList);
		return articleClassList;
	}
	
	//资讯
	@RequestMapping("/getInformationClasse")
	@ResponseBody
	public BashijuResult getInformationClasse(String cityCode){
		String type = HouseArticleTypeEnum.PROPERTYINFORMATION.getCode();//资讯
		//根据城市查出全部文章类型
		List<Map<String, Object>> articleClassList = housePropertyArticleClassesService.queryHousePropertyArticleClassesByTypeAndCityCode(type,cityCode);
		return BashijuResult.ok(articleClassList);
	}
	
	@RequestMapping("/saveArticle")
	@ResponseBody
	public BashijuResult saveArticle(String jsonData){
		Map<Object,Object> data = JSON.parseObject(jsonData, Map.class);
		Long res = contentmanageService.saveArticle(data);
		if(res>0) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("保存失败");
		}
		
	}
	
	@RequestMapping("/getArticleList")
	@ResponseBody
	public Map<String,Object> getArticleList(HttpServletRequest request,int page,int limit){
		Map<String,Object> conditions = new HashMap<>();
		conditions.put("examineStatus", request.getParameter("examineStatus"));
		conditions.put("title", request.getParameter("title"));
		conditions.put("classesname", request.getParameter("typeName"));
		conditions.put("author", request.getParameter("author"));
		conditions.put("sources", request.getParameter("sources"));
		conditions.put("type", request.getParameter("type"));
		Page<Map<String, Object>> pageInfo = contentmanageService.queryArticleList(conditions,page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	@RequestMapping(value="uploadImg")
	@ResponseBody
	public BashijuResult uploadFile(HttpServletRequest request) {
		try {
			Map<String,Object> res = contentmanageService.saveImg(request);
			return BashijuResult.ok(res);
		}catch(Exception e){
			throw new BusinessException("上传错误");
		}
	}
	
	

	
	@RequestMapping("/delArticle")
	@ResponseBody
	public BashijuResult delArticle(Long id){
		boolean res = contentmanageService.delArticle(id);
		if(res) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("删除失败");
		}
		
	}
	
	@RequestMapping("/getExamineList")
	@ResponseBody
	public Map<String,Object> getExamineList(String conditions,int page,int limit){
		Page<Map<String, Object>> pageInfo = contentmanageService.queryExamineList(conditions,page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	
	@RequestMapping("/sureArticle")
	@ResponseBody
	public BashijuResult sureArticle(Long id){
		
		Long res = contentmanageService.sureArticle(id);
		if(res>0) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("失败");
		}
		
	}
	
	@RequestMapping("/rejectArticle")
	@ResponseBody
	public BashijuResult rejectArticle(Long id,String reason){
		
		Long res = contentmanageService.rejectArticle(id,reason);
		if(res>0) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("失败");
		}
		
	}
	
	@RequestMapping("/getCustTipoff")
	@ResponseBody
	public Map<String,Object> getCustTipoff(String condition,int page,int limit){
		Page<Map<String, Object>> pageInfo = contentmanageService.queryCustTipoffk(condition,page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	@RequestMapping("/getCustFeedback")
	@ResponseBody
	public Map<String,Object> getCustFeedback(String condition,int page,int limit){
		Page<Map<String, Object>> pageInfo = contentmanageService.queryCustFeedback(condition,page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	@RequestMapping(value="saveHandleResult")
	@ResponseBody
	public BashijuResult saveHandleResult(int id,String handleResult,String type) {
		Long res = contentmanageService.saveHandleResult(id,handleResult,type);
		if(res>0) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("保存失败");
		}
		
	}
	
	/*@RequestMapping("/getCity")
	@ResponseBody
	public BashijuResult getCity(Long userId){
		List<Map<String, Object>> res = contentmanageService.queryCity(userId);
		return BashijuResult.ok(res);
	}
	
	@RequestMapping("/getClasses")
	@ResponseBody
	public BashijuResult getClasses(String type,String cityCode){
		
		Map<String, Object> res = housePropertyArticleClassesServiceImpl.queryHousePropertyArticleClassesByTypeAndCityCode(type);
		return BashijuResult.ok(res);
		
		
	}*/
	/*	
	@RequestMapping("/getAddressConf")
	@ResponseBody
	public Map<String,Object> getAddressConf(int page,int limit){
		Page<Map<String, Object>> pageInfo = dataacquService.queryAddressConf(page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	@RequestMapping("/delAddressConf")
	@ResponseBody
	public BashijuResult delAddressConf(Long id){
		boolean res = dataacquService.delAddressConf(id);
		if(res) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("删除失败");
		}
		
	}
	
	@RequestMapping("/saveJobConf")
	@ResponseBody
	public BashijuResult saveJobConf(@RequestBody Map<String,Object> data){
		
		Long res = dataacquService.saveJobConf(data);
		if(res>0) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("删除失败");
		}
		
	}
	
	@RequestMapping("/getJobConf")
	@ResponseBody
	public Map<String,Object> getJobConf(int page,int limit){
		Page<Map<String, Object>> pageInfo = dataacquService.queryJobConf(page,limit);
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("count", pageInfo.getTotal());
		map.put("data", pageInfo.getResult());
		map.put("code", 0);
		map.put("msg", "");
		return map;
		
	}
	
	@RequestMapping("/delJobConf")
	@ResponseBody
	public BashijuResult delJobConf(Long id){
		boolean res = dataacquService.delJobConf(id);
		if(res) {
			return BashijuResult.ok();
		}else {
			throw new BusinessException("删除失败");
		}
		
	}*/

}
