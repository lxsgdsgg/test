package com.bashiju.www.service.house.impl;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.bashiju.api.RedisServiceApi;
import com.bashiju.wutils.exception.BusinessException;
import com.bashiju.wutils.exception.ErrorCodeEnum;
import com.bashiju.wutils.log.ExecutionResult;
import com.bashiju.wutils.log.SystemServiceLog;
import com.bashiju.www.global.WebGlobal;
import com.bashiju.www.mapper.HouseMapper;
import com.bashiju.www.pojo.service.input.house.HouseAreaParam;
import com.bashiju.www.pojo.service.input.house.HouseMetroParam;
import com.bashiju.www.pojo.service.input.house.HouseSameParam;
import com.bashiju.www.pojo.service.out.house.AgentResult;
import com.bashiju.www.pojo.service.out.house.CommunityResult;
import com.bashiju.www.pojo.service.out.house.HouseDescriptionResult;
import com.bashiju.www.pojo.service.out.house.HouseImageResult;
import com.bashiju.www.pojo.service.out.house.HouseInfoResult;
import com.bashiju.www.pojo.service.out.house.HouseListResult;
import com.bashiju.www.pojo.service.out.house.ShowedRecordResult;
import com.bashiju.www.service.house.IHouseService;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;	

/**
 * 
 *  房源服务类
 * @ClassName:  HouseServiceImpl   
 * @Description:  房源服务类
 * @author: wangkaifa
 * @date:   2018年7月25日 下午3:53:21       
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@SystemServiceLog(sourceType="房源查询服务") 
@Service
public class HouseServiceImpl implements IHouseService {
	Logger logger=Logger.getLogger(this.getClass());
	@Autowired
	HouseMapper houseMapper;
	@Autowired
	RedisServiceApi redisServiceApi; 
	
	@SystemServiceLog(operationType="查看房源详细")
	@Override
	public HouseInfoResult queryHouseInfo(long id) {
		houseMapper.updateHouseBrowsingCount(id);
		ExecutionResult.descFormat(id+"", "查看房源详细");
		String key=WebGlobal.HOUSE_DETAILED_BASE_REDIS_PREFIX+id;
		String json=getRedis(key);
		if (StringUtils.isEmpty(json)) {
			HouseInfoResult result=houseMapper.queryHouseInfo(id);
			if (result!=null) {
				AgentResult agent=houseMapper.queryAgentResult(result.getAgentId());
				result.setAgent(agent);
				List<HouseDescriptionResult> desList=houseMapper.queryHouseDescriptionList(id);
				result.setHouseDescriptions(desList);
				List<HouseImageResult> imageList=houseMapper.queryHouseImages(id);
				result.setHouseImages(imageList);
				String labeld=houseMapper.queryMetroLabel(result.getCommunityId());
				result.setMetroLabel(labeld);
				CommunityResult community=houseMapper.queryCommunityInfo(id);
				result.setCommunityInfo(community);
				setRedis(key, JSON.toJSONString(result),WebGlobal.OTHER_EXPTIME);
				return result;
			}
			throw new BusinessException(ErrorCodeEnum.UNKNOWN_ERROR);			
		}
		HouseInfoResult result=JSON.parseObject(json, HouseInfoResult.class);
		return result;
	}
	
	@SystemServiceLog(operationType="查看房源详细带看经纪人")
	@Override
	public List<AgentResult> queryShowedAgents(long houseId) {
		ExecutionResult.descFormat(houseId+"", "查看房源详细带看经纪人");
		String key=WebGlobal.HOUSE_DETAILED_SHOWED_REDIS_PREFIX+houseId;
		String json=getRedis(key);
		if (StringUtils.isEmpty(json)) {
			List<AgentResult> result=houseMapper.queryAgentsByHouseId(houseId);
			if (result!=null) {
				setRedis(key,JSON.toJSONString(result),WebGlobal.OTHER_EXPTIME);
				return result;
			}
			throw new BusinessException(ErrorCodeEnum.UNKNOWN_ERROR);
		}
		List<AgentResult> result=JSON.parseArray(json, AgentResult.class);
		return result;
	}
	@SystemServiceLog(operationType="查看房源详细带看记录")
	@Override
	public List<ShowedRecordResult> queryShowedRecordByHouseId(long houseId) {
		ExecutionResult.descFormat(houseId+"", "查看房源详细带看记录");
		String key=WebGlobal.HOUSE_DETAILED_SHOWED_REDIS_PREFIX+houseId;
		String json=getRedis(key);
		if (StringUtils.isEmpty(json)) {
			List<ShowedRecordResult> result=houseMapper.queryShowedRecords(houseId);
			if (result!=null) {
				setRedis(key,JSON.toJSONString(result),WebGlobal.OTHER_EXPTIME);
				return result;
			}
			throw new BusinessException(ErrorCodeEnum.UNKNOWN_ERROR);
		}
		List<ShowedRecordResult> result=JSON.parseArray(json, ShowedRecordResult.class);
		return result;
	}
	@SystemServiceLog(operationType="按区域查询房源列表")
	@Override
	public Page<HouseListResult> queryHouseList(HouseAreaParam param, int page, int limit) {
		//PageHelper.startPage(page, limit);
		
		return null;
	}
	@SystemServiceLog(operationType="按地铁查询房源列表")
	@Override
	public Page<HouseListResult> queryHouseList(HouseMetroParam param, int page, int limit) {
		// TODO Auto-generated method stub
		return null;
	}
	@SystemServiceLog(operationType="查看房源详细相似房源")
	@Override
	public List<HouseListResult> querySameHouseList(HouseSameParam param) {
		// TODO Auto-generated method stub
		return null;
	}

	private String getRedis(String key) {
		String json=null;
		try {
			json = redisServiceApi.get(key);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error(e);
		}
		return json;
	}
	
	private void setRedis(String key,String value,int time) {
		try {
			redisServiceApi.set(key, value,time);
		} catch (Exception e) {
			e.printStackTrace();
			logger.error(e);
		}
	}
}
