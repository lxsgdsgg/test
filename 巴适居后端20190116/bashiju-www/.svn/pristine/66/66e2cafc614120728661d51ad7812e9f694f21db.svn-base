package com.bashiju.www.service.api.impl;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.bashiju.enums.HouseArticleTypeEnum;
import com.bashiju.www.global.WebGlobal;
import com.bashiju.www.pojo.service.out.article.ArticleListResult;
import com.bashiju.www.pojo.service.out.comm.HouseTotalResult;
import com.bashiju.www.pojo.service.out.house.HouseListResult;
import com.bashiju.www.service.api.IHomePageService;
import com.bashiju.www.service.article.IArticleService;
import com.bashiju.www.service.comm.ICacheService;
import com.bashiju.www.service.house.IHouseService;
/**
 * 
 *  首页接口实现
 * @ClassName:  HomePageServiceImpl   
 * @Description:   首页接口实现
 * @author: wangkaifa
 * @date:   2018年7月31日 下午1:29:49       
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Service
public class HomePageServiceImpl implements IHomePageService {
	@Autowired
	private IArticleService articleService;
	@Autowired
	private IHouseService houseService;
	@Autowired
	ICacheService cacheService;
	
	@Override
	public HouseTotalResult queryHouseTotalByCityCode(String cityCode) {
		HouseTotalResult result=houseService.queryHouseTotalByCityCode(cityCode);
		return result;
	}

	@Override
	public List<ArticleListResult> queryNewZiXunList(String cityCode, int limit) {
		String key=WebGlobal.HOME_ENCYCLOPEDIA_REDIS_PREFIX+cityCode;
		String json=cacheService.getCache(key);
		List<ArticleListResult> results=null;
		if (StringUtils.isEmpty(json)) {
			results=articleService.queryArticleList(cityCode, HouseArticleTypeEnum.PROPERTYINFORMATION.getCode(), limit);
			if (results!=null&&results.size()>0) {
				cacheService.saveCache(key, JSON.toJSONString(results), WebGlobal.LIST_EXPTIME);
			}
		}else {
			results=JSON.parseArray(json, ArticleListResult.class);
		}
		return results;
	}

	@Override
	public List<HouseListResult> querySellGoodHouse(String cityCode) {
		List<HouseListResult> results=houseService.querySellGoodHouse(cityCode);
		return results;
	}

	@Override
	public List<HouseListResult> queryRentGoodHouse(String cityCode) {
		List<HouseListResult> results=houseService.queryRentGoodHouse(cityCode);
		return results;
	}

}
