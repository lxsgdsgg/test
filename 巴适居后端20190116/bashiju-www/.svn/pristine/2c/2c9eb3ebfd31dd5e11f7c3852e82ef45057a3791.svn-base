package com.bashiju.www.service.house;
/**
 * 
 *   房源服务
 * @ClassName:  IHouseService   
 * @Description:  房源服务
 * @author: wangkaifa
 * @date:   2018年7月25日 下午12:01:33       
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */

import java.util.List;

import com.bashiju.www.pojo.comm.WebPage;
import com.bashiju.www.pojo.service.input.house.HouseAreaParam;
import com.bashiju.www.pojo.service.input.house.HouseMetroParam;
import com.bashiju.www.pojo.service.input.house.HouseSameParam;
import com.bashiju.www.pojo.service.input.house.HouseTipOffParam;
import com.bashiju.www.pojo.service.out.article.ArticleListResult;
import com.bashiju.www.pojo.service.out.comm.HouseTotalResult;
import com.bashiju.www.pojo.service.out.house.AgentResult;
import com.bashiju.www.pojo.service.out.house.CommunityResult;
import com.bashiju.www.pojo.service.out.house.HouseCompareResult;
import com.bashiju.www.pojo.service.out.house.HouseFeedbackResult;
import com.bashiju.www.pojo.service.out.house.HouseInfoResult;
import com.bashiju.www.pojo.service.out.house.HouseListResult;
import com.bashiju.www.pojo.service.out.house.HouseSameLinkResult;
import com.bashiju.www.pojo.service.out.house.ShowedRecordResult;
import com.github.pagehelper.Page;

public interface IHouseService {
	/**
	 * 
		 * 根据id查询房源基础信息
		 * @Description: 根据id查询房源基础信息
		 * @param id
		 * @return 
		 * HouseInfoResult
	 */
	HouseInfoResult queryHouseInfo(long id);
	/**
	 * 
		 * 查询带看经纪人列表
		 * @Description: 查询带看经纪人列表 
		 * @param houseId 房源id
		 * @return 
		 * List<AgentResult>
	 */
	List<AgentResult> queryShowedAgents(long houseId);
	/**
	 * 
		 * 根据房源id查询带看记录
		 * redis的key值:用queryShowedRecordByHouseId+房源id+当前页+每页条数,拼成字符串，调用Md5EncryptUtils.md5Encrypt(str)生成key值
		 * @Description: 根据房源id查询带看记录 
		 * @param houseId
		 * @param page 当前页数
		 * @param limit 每页条数
		 * @return 
		 * List<ShowedRecordResult>
	 */
	WebPage<ShowedRecordResult> queryShowedRecordByHouseId(long houseId,int page,int limit);
	/**
	 * 
		 * 查询相似房源,房源默认条件isPriority=1,isSynchron=1,statusId=1,examineStatus=1,isValid=1
		 * @Description: 查询相似房源
		 * @param param
		 * @return 
		 * List<HouseListResult>
	 */
	List<HouseListResult> querySameHouseList(HouseSameParam param);
	/**
	 * 
		 * 根据小区名称模糊搜索房源,不需要存入redis 
		 * @Description: 根据小区名称模糊搜索房源 
		 * @param communityName 小区名称
		 * @param type 房源交易类型:1、出售，2、出租
		 * @return 
		 * Page<HouseListResult>
	 */
	WebPage<HouseListResult> queryHouseByCoummunity(String communityName,int type,int page,int limit);
	/**
	 * 
		 * 按区域搜索房源列表，房源默认条件isPriority=1,isSynchron=1,statusId=1,examineStatus=1,isValid=1
		 * @Description: 按区域搜索房源列表
		 * @param param 
		 * @param page 当前页
		 * @param limit 每页条数
		 * @return 
		 * Page<HouseListResult>
	 */
	WebPage<HouseListResult> queryHouseList(HouseAreaParam param,int page,int limit);
	/**
	 * 
		 * 按地铁搜索房源列表，房源默认条件isPriority=1,isSynchron=1,statusId=1,examineStatus=1,isValid=1
		 * @Description: 按地铁搜索房源列表
		 * @param param 
		 * @param page 当前页
		 * @param limit 每页条数
		 * @return 
		 * Page<HouseListResult>
	 */
	WebPage<HouseListResult> queryHouseList(HouseMetroParam param,int page,int limit);
	/**
	 * 
		 * 房源比较查询
		 * @Description: 房源比较查询
		 * @param ids 比较房源id
		 * @return 
		 * List<HouseCompareResult>
	 */
	List<HouseCompareResult> queryHouseCompareList(List<Long> ids);

	/**
	 * 
		 * 添加房源举报，举报时间设置成当前时间
		 * @Description: 添加房源举报
		 * @param param 举报信息
		 * @return 
		 * boolean
	 */
	boolean addHouseTipOff(HouseTipOffParam param);
	/**
	 * 
		 * 查询城市的新房、二手房、租房数量，存入redis的key值WebGlobal.HOME_HOUSE_TOTAL_REDIS_PREFIX+城市代码
		 * @Description: 查询城市的新房、二手房、租房数量
		 * @param cityCode 城市代码
		 * @return 
		 * HouseTotalResult
	 */
	HouseTotalResult queryHouseTotalByCityCode(String cityCode);
	/**
	 * 
		 * 首页二手房推荐查询,显示4个靓房最后修改的靓房排在最前边,redis缓存key值WebGlobal.HOME_SELLGOOD_REDIS_PREFIX+城市代码
		 * @Description: 首页二手房推荐查询
		 * @param cityCode 城市代码
		 * @return 
		 * List<HouseListResult>
	 */
	List<HouseListResult> querySellGoodHouse(String cityCode);
	
	/**
	 * 
		 * 首页租房推荐查询,显示4个靓房最后修改的靓房排在最前边,redis缓存key值WebGlobal.HOME_RENTGOOD_REDIS_PREFIX+城市代码
		 * @Description: 首页租房推荐查询
		 * @param cityCode 城市代码
		 * @return 
		 * List<HouseListResult>
	 */
	List<HouseListResult> queryRentGoodHouse(String cityCode);
	/**
	 * 
		 * 首页资讯百科推荐查询，显示9个最新文章，审核通过examineStatus=1,isValid=1
		 * redis缓存key值WebGlobal.HOME_ENCYCLOPEDIA_REDIS_PREFIX+城市代码
		 * @Description: 进入菜单主页面（详细描述） 
		 * @param cityCode
		 * @return 
		 * List<ArticleListResult>
	 */
	List<ArticleListResult> queryBaikes(String cityCode);
	/**
	 * 
		 * 新增经纪人带看反馈有用次数，同用户同反馈点击只算一次，新增同时修改反馈表的有用次数
		 * @Description: 新增经纪人带看反馈有用次数 
		 * @param custId
		 * @param agentEvaluateHouseId
		 * @return 
		 * boolean
	 */
	boolean addFeedbackUseCount(int custId,int agentEvaluateHouseId);
	/**
	 * 
		 * 经纪人带看反馈分页查询,需要审核通过
		 * redis的key值:用queryFeedback+房源id+当前页+每页条数,拼成字符串，调用Md5EncryptUtils.md5Encrypt(str)生成key值
		 * @Description: 经纪人带看反馈分页查询 
		 * @param houseId 房源id
		 * @param page 当前页
		 * @param limit 每页条数
		 * @return 
		 * Page<HouseFeedbackResult>
	 */
	WebPage<HouseFeedbackResult> queryFeedback(long houseId,int page,int limit);
}
