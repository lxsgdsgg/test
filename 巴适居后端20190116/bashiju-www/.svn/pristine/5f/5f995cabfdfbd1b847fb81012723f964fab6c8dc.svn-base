/**  
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  CustomerConcernedHouseServiceImpl.java   
 * @Package com.bashiju.www.service.user.impl      
 * @author: zuoyuntao     
 * @date:   2018年7月26日 下午4:35:50   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/

package com.bashiju.www.service.user.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import com.bashiju.api.RedisServiceApi;
import com.bashiju.www.mapper.CustomerConcernedHouseMapper;
import com.bashiju.www.pojo.service.out.usercentral.CustomerConcernedHouseEntity;
import com.bashiju.www.service.user.ICustomerConcernedHouseService;

/**
 * 个人中心--用户房源关注服务
 * @ClassName:CustomerConcernedHouseServiceImpl
 * @Description:个人中心--用户房源关注服务
 * @author:zuoyuntao
 * @date:2018年7月26日 下午4:35:50
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved.
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */

public class CustomerConcernedHouseServiceImpl implements ICustomerConcernedHouseService{
	/**
	 * 房源关注接口
	 */
	@Autowired
	private CustomerConcernedHouseMapper mCustomerConcernedHouseMapper;
	/**
	 * Redis服务接口
	 */
	@Autowired(required=false)
	private RedisServiceApi redisServiceApi;
	
	/**
	 * <p>Title: cancelConcernedHouse</p>   
	 * <p>Description: </p>   
	 * @param custId 登陆用户ID
	 * @param sourceId 房源、小区或其他关注对象的ID
	 * @param houseType 房源类型（1：新房、2：二手房、3：租房）
	 * @see com.bashiju.www.service.user.ICustomerConcernedHouseService#cancelConcernedHouse(java.lang.String, java.lang.String, java.lang.String)
	 */
	@Override
	public void cancelConcernedHouse(String custId, String sourceId, String houseType) {
		mCustomerConcernedHouseMapper.cancelConcernedHouse(
				custId, sourceId, houseType);
		//取消关注后更新Redis数据
		updateRedisDataList(custId, "queryAllConcernedHouseList"+"HashCode");
	}
	
	/**
	 * <p>Title: queryAllConcernedHouseList</p>   
	 * <p>Description: </p>   
	 * @param custId
	 * @return   
	 * @see com.bashiju.www.service.user.ICustomerConcernedHouseService#queryAllConcernedHouseList(java.lang.String, java.lang.String)
	 */
	@Override
	public List<CustomerConcernedHouseEntity> queryAllConcernedHouseList(
			String custId) {
		List<CustomerConcernedHouseEntity> retList = new ArrayList<CustomerConcernedHouseEntity>();
		retList = queryAllConcernedHouseListFromRedis(custId);
		if(null == retList) {
			retList = mCustomerConcernedHouseMapper.queryAllConcernedList(custId);
		}
		return retList;
	}
	/**
	 * 从Redis读取数据
	 * @Title: queryAllConcernedHouseListFromRedis
	 * @author: zuoyuntao  
	 * @Description:从Redis读取数据
	 * @param custId 登陆用户ID
	 * @param mobile 登陆用户电话
	 * @return      
	 * List<CustomerConcernedHouseEntity> JSON 格式为：
	 */
	private List<CustomerConcernedHouseEntity> queryAllConcernedHouseListFromRedis(
			String custId){
		List<CustomerConcernedHouseEntity> retList 
						= new ArrayList<CustomerConcernedHouseEntity>();
		try {
			retList = redisServiceApi.getList(
					"queryAllConcernedHouseList"+"HashCode");
		}catch(Exception ee) {
			ee.printStackTrace();
			return null;
		}
		return retList;
	}
	/**
	 * 根据Key更新Redis数据 
	 * @Title: updateRedisDataList
	 * @author: zuoyuntao  
	 * @Description:根据Key更新Redis数据   
	 * @param dataList
	 * @param key      
	 * void 
	 */
	private void updateRedisDataList(String custId,String key) {
		List<CustomerConcernedHouseEntity> dataList 
				= mCustomerConcernedHouseMapper.queryAllConcernedList(custId);
		redisServiceApi.setList(key, dataList);
	}
}
