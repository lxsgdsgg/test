package com.bashiju.customer.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.bashiju.customer.service.CustFollowRecordService;
import com.bashiju.customer.service.CustomerStatusEnum;
import com.bashiju.utils.service.BaseController;
import com.github.pagehelper.Page;
/**
 * 
 * @ClassName:  CustFollowRecordController   
 * @Description:客源带看记录控制层
 * @author: wangpeng
 * @date:   2018年6月13日 下午2:21:39   
 *     
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@Controller
@RequestMapping(value="CustFollowRecord")
public class CustFollowRecordController  extends BaseController{
	@Autowired
	private CustFollowRecordService  custFollowRecordService;
	
	/**
	 * 
	 * @Title: enterCustFollowRecordPage   
	 * @Description:进入客源跟进记录 
	 * @param request
	 * @param response
	 * @return      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="enterCustFollowRecordPage")
	public ModelAndView enterCustFollowRecordPage(HttpServletRequest request,HttpServletResponse response) {
		ModelAndView mv=getModelAndView(request, response, "custFollowRecord/custFollowRecord");
		mv.addObject("custStatu", CustomerStatusEnum.itemList);
		return mv;
	}
	/***
	 * 
	 * @Title: enterCustFollowRecordDetailPage   
	 * @Description: 进入客源跟进详情页面
	 * @param request
	 * @param response
	 * @param custId
	 * @return      
	 * @return: ModelAndView
	 */
	@RequestMapping(value="enterCustFollowRecordDetailPage")
	public ModelAndView enterCustFollowRecordDetailPage(HttpServletRequest request,HttpServletResponse response,String demandId) {
		ModelAndView mv=getModelAndView(request, response, "custFollowRecord/custFollowRecordDetail");
		mv.addObject("demandId", demandId);
		return mv;
	}
	/**
	 * 
	 * @Title: queryCustShowedRecordData   
	 * @Description: 查询客源跟进记录(分页)
	 * @param transactionType 交易类型	
	 * @param followTypeName 跟进类型名称
	 * @param followType 跟进方式
	 * @param followerId 跟进人
	 * @param custIdAndFollowfollower 客源标号或跟进人
	 * @param operatorId 维护人Id
	 * @param beginTime
	 * @param endTime
	 * @param page
	 * @param limit
	 * @return      
	 * @return: Map<String,Object>
	 */
	@RequestMapping(value="queryCustFollowRecordData")
	@ResponseBody
	public Map<String,Object>queryCustShowedRecordData(String transactionType,String followTypeName,String followType,String followerId,String custIdAndFollowfollower,String operatorId,String beginTime,String endTime,int page,int limit){
		Page<Map<String,Object>>pages=custFollowRecordService.queryCustFollowRecordData(transactionType, followTypeName, followType, followerId,custIdAndFollowfollower,operatorId, beginTime, endTime,page, limit);
		Map<String,Object>map=getPageResult(pages);
		return map;
	}
	/**
	 * 
	 * @Title: queryCustFollowRecordByCustId   
	 * @Description: 通过客源编号查询客源跟进记录
	 * @param custId 客源id
	 * @param page
	 * @param limit
	 * @return      
	 * @return: Map<String,Object>
	 */
	@RequestMapping(value="queryCustFollowRecordByDemandId")
	@ResponseBody
	public Map<String,Object>queryCustFollowRecordByDemandId(String demandId,int page,int limit){
		Page<Map<String,Object>>custs=custFollowRecordService.queryCustFollowRecordByDemandId(demandId, page, limit);
		Map<String,Object>map=getPageResult(custs);
		return  map;
	}
}
