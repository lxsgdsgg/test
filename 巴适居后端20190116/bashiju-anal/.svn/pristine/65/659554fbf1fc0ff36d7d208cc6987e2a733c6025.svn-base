/**  
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  DealConversionRateAnalysisController.java   
 * @Package com.bashiju.anal.controller      
 * @author: zuoyuntao     
 * @date:   2018年11月24日 上午9:56:07   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/

package com.bashiju.anal.controller;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONObject;
import com.bashiju.anal.mapper.AnalCommonMapper;
import com.bashiju.anal.mapper.DealConversionRateAnalysisMapper;
import com.bashiju.anal.pojo.Cell;
import com.bashiju.anal.pojo.Row;
import com.bashiju.anal.pojo.Thead;
import com.bashiju.enums.CustomerTransactionEnum;
import com.bashiju.enums.DeptTypeEnum;
import com.bashiju.utils.threadlocal.UserThreadLocal;

/**
 * 决策分析--成交转化率分析--控制器
 * @ClassName:DealConversionRateAnalysisController
 * @Description:决策分析--成交转化率分析--控制器
 * @author:zuoyuntao
 * @date:2018年11月24日 上午9:56:07
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved.
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */

@RequestMapping(value="dealConversionRateAnalysis")
@Controller
public class DealConversionRateAnalysisController{
	/**
	 * 公用的持久层对象
	 */
	@Autowired
	private AnalCommonMapper commonMapper;
	/**
	 * 成交转化率分析持久层对象
	 */
	@Autowired
	private DealConversionRateAnalysisMapper mDealConversionRateAnalysisMapper;
	/**
	 * 组装【成交转化率分析】报表表头 
	 * @Title: buildReportHeader
	 * @author: zuoyuntao  
	 * @Description:组装【成交转化率分析】报表表头 
	 * Thead
	 */
	private Thead buildReportHeader() {
		//封装表头
		Thead thead = new Thead();//定义表头对象
		List<Row> rows = new ArrayList<Row>(0);//定义表头行数
			
		//第一行
		List<Cell> cells1 = new ArrayList<Cell>(0);//定义表头列数
		List<List<Cell>> cells = new ArrayList<List<Cell>>(0);
		cells1.add(new Cell.Builder().setField("areaName").setTitle("区").setTotalRowText("合计").setRowspan(2).build());
		cells1.add(new Cell.Builder().setField("deptName").setTitle("门店").setRowspan(2).build());
		cells1.add(new Cell.Builder().setTitle("新增资源").setColspan(5).setAlign("center").build());
		cells1.add(new Cell.Builder().setTitle("全部资源").setColspan(3).setAlign("center").build());
		cells.add(cells1);
		
		//第二行
		List<Cell> cells2 = new ArrayList<Cell>(0);//定义表头列数
		cells2.add(new Cell.Builder().setField("addSourceCnt").setTitle("新增客源").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("custShowedCnt").setTitle("带看数").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("custShowedRate").setTitle("带看比例").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("dealCnt").setTitle("成交数").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("showedDealRate").setTitle("带看成交比").setTotalRow(true).build());
		
		cells2.add(new Cell.Builder().setField("validSourceCnt").setTitle("有效资源").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("leaseCustShowedCnt").setTitle("带看数").setTotalRow(true).build());
		cells2.add(new Cell.Builder().setField("leaseCustShowedRate").setTitle("带看比例").setTotalRow(true).build());
		cells.add(cells2);
		rows.add(new Row.Builder().cells(cells).build());
		thead.setRows(rows);
		return thead;
	}
	/**
	 * @Description: 进入【成交转化率分析】页面   
	 * @param request
	 * @param response
	 * @return: ModelAndView
	 */
	@RequestMapping(value="pageMain")
	public ModelAndView statisticsDealConversionRate(HttpServletRequest request,HttpServletResponse response) {
		// 页面建模
		ModelAndView mv = new ModelAndView("dealConversionRateAnalysis/dealConversionRateAnalysis");
		//获取部门数据信息
		List<Map<String, Object>> deptList = commonMapper.queryDeptTrees(UserThreadLocal.get().get("roleGroup").toString());
		// 门店信息
		mv.addObject("deptInfo", JSONObject.toJSONString(deptList));
		// 客源交易类型
		mv.addObject("customerTransactionType", CustomerTransactionEnum.enumMap);
		// 获取城市信息
		mv.addObject("cityInfo", commonMapper.queryCompanyCityInfo(UserThreadLocal.get().get("companyId").toString()));
		// 组装表头信息
		mv.addObject("thead", JSONObject.toJSON(buildReportHeader()));
		return mv;
	}
	/**
	 * 查询页面数据
	 * @Title: queryReportData
	 * @author: zuoyuntao  
	 * @Description:查询页面数据
	 * @param request
	 * @param response
	 * @return      
	 * Object JSON 格式为：
	 */
	@RequestMapping(value="queryReportData")
	@ResponseBody
	public Object queryReportData(HttpServletRequest request,HttpServletResponse response) {
		String begin = request.getParameter("beginDate");
		String end = request.getParameter("endDate");
		String deptId = request.getParameter("deptId");
		String requestType = request.getParameter("requestType");
		if(StringUtils.isEmpty(begin))
			begin = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
		if(StringUtils.isEmpty("end"))
			end = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
		String deptTypeId = DeptTypeEnum.DEPT_AREA.getCode();//默认为区
		if(!StringUtils.isEmpty(deptId)) {
			Integer dyd = commonMapper.getDeptTypeById(deptId);
			if(dyd!=null)
				deptTypeId = dyd.toString();
		}
		List<Map<String,Object>> list = mDealConversionRateAnalysisMapper.queryPageDataList(requestType,begin, end
				, deptId, deptTypeId, UserThreadLocal.get().get("companyId").toString());
		
		Map<String,Object> map = new HashMap<String,Object>(0);
		map.put("code", 0);
		map.put("msg", "");
		map.put("count", list.size());
		map.put("data", list);
		return map;
	}
}
