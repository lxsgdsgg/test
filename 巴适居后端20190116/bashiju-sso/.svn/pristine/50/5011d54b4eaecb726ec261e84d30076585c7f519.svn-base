/**  
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  JBrowserDialog.java   
 * @Package com.bashiju.sso.controller      
 * @author: zuoyuntao     
 * @date:   2018年7月12日 下午12:01:04   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/

package com.bashiju.sso.controller;

import java.awt.BorderLayout;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

import org.apache.http.HttpEntity;
import org.apache.http.client.CookieStore;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;

import com.teamdev.jxbrowser.chromium.Browser;
import com.teamdev.jxbrowser.chromium.CookieStorage;
import com.teamdev.jxbrowser.chromium.swing.BrowserView;

/**
 * 应用系统嵌入Java窗体程序对话框
 * @ClassName:JBrowserDialog
 * @Description:应用系统嵌入Java窗体程序对话框
 * @author:zuoyuntao
 * @date:2018年7月12日 下午12:01:04
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved.
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */

public class JBrowserFrame extends JFrame{
	/**   
	 * @Fields serialVersionUID : TODO(用一句话描述这个变量表示什么)   
	 */ 
	private static final long serialVersionUID = -6075590141461295085L;
	/**
	 * cookie的URL
	 */
	private static String COOKIEKEY = "http://sso.bashiju.com";
	/**
	 * cookie对象
	 */
	private CookieStore cookieStore = null;
	/**
	 * Chrome浏览器
	 */
	private Browser browser = null;
	
	public JBrowserFrame(CookieStore cookieStore) {
		super();
		this.cookieStore = cookieStore;
		addListeners();
	}
 
	/**
     * 将应用系统嵌入Java窗体程序
     * @Title: doLoginSystem
     * @author: zuoyuntao  
     * @Description:将应用系统嵌入Java窗体程序
     * @param url      
     * void 
     */
//	public void doLoginSystem(String url) {
//		new Thread(){
//			@Override
//			public void run() {
////				UIUtils.setPreferredLookAndFeel();
//				NativeInterface.open();
//				SwingUtilities.invokeLater(new Runnable() {
//					@SuppressWarnings("static-access")
//					public void run() {
//						setTitle("巴适居网络服务有限公司");
//						//调试用
//						ImageIcon icon = new ImageIcon("src/main/webapp/WEB-INF/image/logo.png");
//						//打包EXE用
////						ImageIcon icon = new ImageIcon(getClass().getResource(
////								"/src/main/webapp/WEB-INF/image/logo.png"));
//						setIconImage(icon.getImage());  
//						setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//						//序列号Panel对象并设置为边界布局
//						JPanel webBrowserPanel = new JPanel(new BorderLayout());
//						//初始化Java Swing对象
////				        NSSystemPropertySWT.WEBBROWSER_XULRUNNER_HOME.set(System.getProperty("user.dir") + "/xulrunner");
//				        final JWebBrowser webBrowser = new JWebBrowser(JWebBrowser.useXULRunnerRuntime());
////				        String pathToXulrunner = "C:\\Program Files (x86)\\xulrunner";
////				        System.setProperty("org.eclipse.swt.browser.XULRunnerPath", pathToXulrunner);
//						//将组件添加到当前的Panel中
//						webBrowserPanel.add(webBrowser, BorderLayout.CENTER);
//						//将当panel添加到当前Frame中
//						add(webBrowserPanel, BorderLayout.CENTER);
//						//隐藏所有自带组件（如File和View）
//						webBrowser.setBarsVisible(false);
//						//屏蔽Java脚本
//						webBrowser.setJavascriptEnabled(true);
//						//屏蔽右键菜单
//						webBrowser.setDefaultPopupMenuRegistered(false);
//						//禁用浏览器后退功能
//						webBrowser.isBackNavigationEnabled();
//						//禁用状态栏
//						webBrowser.setStatusBarVisible(false);
//						List<Cookie> cookies = cookieStore.getCookies();
//				        for (Cookie cookieObj : cookies) {
//				        	webBrowser.setCookie(COOKIEKEY
//				        			, cookieObj.getName() + "=" + cookieObj.getValue());
//				        }
//				        //设置应用地址
//						webBrowser.navigate(url);
//						add(webBrowserPanel,BorderLayout.CENTER);
//						setSize(1024,768);
//						setExtendedState(JFrame.MAXIMIZED_BOTH);
//						setLocationByPlatform(true);
//						setVisible(true);
//					}
//				});
////				NativeInterface.runEventPump();
//            }
//		}.start();
//	}
	
	
	/**
     * @wbp.parser.entryPoint
     */
//    @PostConstruct
    public void postConstruct(String url) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
            	setTitle("巴适居网络服务有限公司");
                browser = new Browser();
                BrowserView view = new BrowserView(browser);
                add(view, BorderLayout.CENTER);
                
				//调试用
//				ImageIcon icon = new ImageIcon("src/main/webapp/WEB-INF/image/logo.png");
				//打包EXE用
				ImageIcon icon = new ImageIcon(getClass().getResource(
						"/src/main/webapp/WEB-INF/image/logo.png"));
				setIconImage(icon.getImage());
				setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);  
		        //设置应用地址
				List<Cookie> cookies = cookieStore.getCookies();
				CookieStorage cookie = browser.getCookieStorage();
		        for (Cookie cookieObj : cookies) {
		        	cookie.setCookie(COOKIEKEY, cookieObj.getName()
		        		, cookieObj.getValue(),cookieObj.getDomain()
		        			,cookieObj.getPath(),-1, false, false);
		        }
				setSize(1024,768);
				setExtendedState(JFrame.MAXIMIZED_BOTH);
				browser.loadURL(url);
				setVisible(true);
            }
        });
    }
	
	/**
	 * 添加窗体监听
	 * @Title: addListeners
	 * @author: zuoyuntao  
	 * @Description:添加窗体监听         
	 * void JSON 格式为：
	 */
	private void addListeners() {
		addWindowListener(new WindowListener() {
			@Override
			public void windowOpened(WindowEvent e) {}
			@Override
			public void windowClosing(WindowEvent e) {
//				if(NativeInterface.isOpen()) {
//					NativeInterface.close();
//				}
				browser.getCookieStorage().deleteAll();
				browser.dispose();
				dispose();
				try {
					List<Cookie> cookies = cookieStore.getCookies();
					Map<String, String> params = new HashMap<String,String>();
			        for (Cookie cookieObj : cookies) {
			        	params.put(cookieObj.getName(),cookieObj.getValue());
			        }
					sendPostRequest("http://sso.bashiju.com/sso/loginout",params, "UTF-8");
					LoginDialog dialog = new LoginDialog();
					dialog.initView();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
			@Override
			public void windowClosed(WindowEvent e) {
			}
			@Override
			public void windowIconified(WindowEvent e) {}
			@Override
			public void windowDeiconified(WindowEvent e) {}
			@Override
			public void windowActivated(WindowEvent e) {}
			@Override
			public void windowDeactivated(WindowEvent e) {}
		});
	}
	
	/**
	 * 发起登录系统的HTTP请求
	 * 
	 * @Title: sendPostRequest
	 * @author: zuoyuntao
	 * @Description:发起登录系统的HTTP请求
	 * @param url
	 *            链接地址
	 * @param content
	 *            参数
	 * @param charset
	 *            编码格式
	 * @return 返回请求结果
	 * @throws IOException
	 */
	public String sendPostRequest(String url, Map<String, String> params, String charset) throws IOException {
		HttpPost post = new HttpPost(url);
		List<BasicNameValuePair> values = new ArrayList<>();
		if (null != params) {
			for (Map.Entry<String, String> entry : params.entrySet()) {
				values.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
			}
		}
		HttpEntity entity = new UrlEncodedFormEntity(values, "utf-8");
		post.setEntity(entity);
		post.setHeader("Connection", "close");

		try (CloseableHttpClient httpClient = HttpClientBuilder.create().setDefaultCookieStore(cookieStore).build();
				CloseableHttpResponse response = httpClient.execute(post)) {
			return EntityUtils.toString(response.getEntity(), charset);
		} catch (Exception e) {
			System.out.println("获取失败");
			throw e;
		}
	}
}
