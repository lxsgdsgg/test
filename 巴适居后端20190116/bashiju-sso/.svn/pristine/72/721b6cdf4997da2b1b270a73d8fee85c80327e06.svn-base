/**  
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  SimpleWebBroser.java   
 * @Package com.bashiju.manage.controller      
 * @author: zuoyuntao     
 * @date:   2018年7月5日 上午9:27:42   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/

package com.bashiju.sso.controller;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Scanner;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

import chrriis.common.UIUtils;
import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;

/**
 * Java Swing 嵌入web应用
 * @ClassName:SimpleWebBroser
 * @Description: Java Swing 嵌入web应用
 * @author:zuoyuntao
 * @date:2018年7月5日 上午9:27:42
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved.
 *             本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
public class SimpleWebBrowserLogin extends JPanel {

	/**   
	 * @Fields serialVersionUID : 串行版本标识ID
	 */ 
	private static final long serialVersionUID = 5320050929572469118L;

	public SimpleWebBrowserLogin() {
		//调用父类，设置布局方式
		super(new BorderLayout());
		//序列号Panel对象并设置为边界布局
		JPanel webBrowserPanel = new JPanel(new BorderLayout());
		//初始化Java Swing对象
		final JWebBrowser webBrowser = new JWebBrowser();
		//设置应用地址
		webBrowser.navigate("http://sso.bashiju.com/sso/login");
		//将组件添加到当前的Panel中
		webBrowserPanel.add(webBrowser, BorderLayout.CENTER);
		//将当panel添加到当前Frame中
		add(webBrowserPanel, BorderLayout.CENTER);
		//隐藏所有自带组件（如File和View）
		webBrowser.setBarsVisible(false);
		//屏蔽Java脚本
		webBrowser.setJavascriptEnabled(true);
		//屏蔽右键菜单
		webBrowser.setDefaultPopupMenuRegistered(false);
		//禁用浏览器后退功能
		webBrowser.isBackNavigationEnabled();
		//禁用状态栏
		webBrowser.setStatusBarVisible(false);
		
	}
	
	/* Standard main method to try that test as a standalone application. */
	public static void main(String[] args) {
		UIUtils.setPreferredLookAndFeel();
		NativeInterface.open();
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				JFrame frame = new JFrame("巴适居网络服务有限公司");
				ImageIcon icon = new ImageIcon("/src/sso-platform/images/logo-dark.png");
				frame.setIconImage(icon.getImage());  
				frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				frame.getContentPane().add(new SimpleWebBrowserLogin(), BorderLayout.CENTER);
				frame.setSize(1024, 768);
				frame.setLocationByPlatform(true);
				frame.setVisible(true);
			}
		});
		try {
			outputHostIpInfo();
			getCpuInfo();
			getSerialNumber("C");
			getMotherboardSN();
		} catch (IOException e) {
			e.printStackTrace();
		}
		NativeInterface.runEventPump();
	}
	
	/**
	 * 获取客户端主机IP地址
	 * @Title: outputHostIpInfo
	 * @author: zuoyuntao  
	 * @Description:获取客户端主机IP地址   
	 * void
	 */
	@SuppressWarnings("static-access")
	private static void outputHostIpInfo() {
		try {
			// 根据网卡取本机配置的IP
			InetAddress inet = InetAddress.getLocalHost();
			String ipAddress = inet.getHostAddress(); 
			System.out.println(inet.getHostName() + "," + inet.getAddress() +","+ inet.getLocalHost()+","
					+inet.getCanonicalHostName() +"," +inet.getLoopbackAddress());
			
			System.out.println("当前电脑的IP地址：" + ipAddress);
		} catch (UnknownHostException e) {
			e.printStackTrace();
		}
	}
	
	// 获取CPU序列号
	@SuppressWarnings("resource")
	private static void getCpuInfo() throws IOException {
		Process process = Runtime.getRuntime().exec(new String[] { "wmic", "cpu", "get", "ProcessorId" });
		process.getOutputStream().close();
		Scanner sc = new Scanner(process.getInputStream());
		String property = sc.next();
		String serial = sc.next();
		System.out.println("系统CPU信息>>>" + property +":" + serial);
	}
		
	// 获取硬盘序列号
	// wmic diskdrive get SerialNumber
	public static String getSerialNumber(String drive) {
		String result = "";
		try {
			File file = File.createTempFile("realhowto", ".vbs");
			file.deleteOnExit();
			FileWriter fw = new java.io.FileWriter(file);
			String vbs = "Set objFSO = CreateObject(\"Scripting.FileSystemObject\")\n"
					+ "Set colDrives = objFSO.Drives\n" + "Set objDrive = colDrives.item(\"" + drive + "\")\n"
					+ "Wscript.Echo objDrive.SerialNumber"; // see note
			fw.write(vbs);
			fw.close();
			Process p = Runtime.getRuntime().exec("cscript //NoLogo " + file.getPath());
			BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
			String line;
			while ((line = input.readLine()) != null) {
				result += line;
			}
			input.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		System.out.println("硬盘序列号:" + result.trim());
		return result.trim();
	}
	 
	// 获取主板序列号
	// 主板厂商：wmic BaseBoard get Manufacturer
	// 主板型号：wmic BaseBoard get Product
	public static String getMotherboardSN() {
		String result = "";
		try {
			File file = File.createTempFile("realhowto", ".vbs");
			file.deleteOnExit();
			FileWriter fw = new java.io.FileWriter(file);
			String vbs = "Set objWMIService = GetObject(\"winmgmts:\\\\.\\root\\cimv2\")\n"
					+ "Set colItems = objWMIService.ExecQuery _ \n" + "   (\"Select * from Win32_BaseBoard\") \n"
					+ "For Each objItem in colItems \n" + "    Wscript.Echo objItem.SerialNumber \n"
					+ "    exit for  ' do the first cpu only! \n" + "Next \n";
			fw.write(vbs);
			fw.close();
			Process p = Runtime.getRuntime().exec("cscript //NoLogo " + file.getPath());
			BufferedReader input = new BufferedReader(new InputStreamReader(p.getInputStream()));
			String line;
			while ((line = input.readLine()) != null) {
				result += line;
			}
			input.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		System.out.println("主板序列号:" + result.trim());
		return result.trim();
	}
}
