package com.bashiju.www.service.api;

import java.io.UnsupportedEncodingException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.bashiju.enums.BottomContentEnum;
import com.bashiju.www.pojo.service.community.HotCommunity;
import com.bashiju.www.pojo.service.out.article.ArticleListResult;
import com.bashiju.www.pojo.service.out.comm.ContactUsResult;
import com.bashiju.www.pojo.service.out.comm.HouseTotalResult;
import com.bashiju.www.pojo.service.out.comm.NavigationBar;
import com.bashiju.www.pojo.service.out.comm.OpenCity;
import com.bashiju.www.pojo.service.out.comm.WebProtocolResult;
import com.bashiju.www.pojo.service.out.house.HouseListResult;
import com.bashiju.www.pojo.service.user.CustCustomerEntity;
import com.bashiju.www.pojo.service.user.CustCustomerParam;

/**
 * 
 *   首页接口
 * @ClassName:  IHomePageService   
 * @Description:   首页接口
 * @author: wangkaifa
 * @date:   2018年7月31日 上午10:31:39       
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
public interface IHomePageService {
	/**
	 * @Title: queryHeadNavigationBar   
	 * @Description: 查询头部导航栏 
	 * @param cityCode  已开通城市行政区域代码
	 * @return: List<NavigationBar>
	 */
	List<NavigationBar> queryHeadNavigationBar(String cityCode);
	
	/**
	 * @Title: queryLinkedNavigationBar   
	 * @Description: 查询底部友情链接 
	 * @param cityCode 城市代码
	 * @return: List<NavigationBar>
	 */
	List<NavigationBar> queryLinkedNavigationBar(String cityCode);
	
	/**
	 * 
		 * 查询城市的新房、二手房、租房数量
		 * @Description: 查询城市的新房、二手房、租房数量
		 * @param cityCode 城市代码
		 * @return 
		 * HouseTotalResult
	 */
	HouseTotalResult queryHouseTotalByCityCode(String cityCode);

	/**
	 * 
		 * 首页根据城市查询最新资讯列表
		 * redis的key值:WebGlobal.HOME_ENCYCLOPEDIA_REDIS_PREFIX+城市代码
		 * @Description: 根据城市查询热门资讯列表，点击率高的的最新资讯文章 
		 * @param cityCode 城市代码
		 * @param limit 显示条数
		 * @return 
		 * List<ArticleListResult>
	 */
	List<ArticleListResult> queryNewZiXunList(String cityCode,int limit);
	
	/**
	 * 
		 * 首页二手房推荐查询,显示4个靓房最后修改的靓房排在最前边
		 * @Description: 首页二手房推荐查询
		 * @param cityCode 城市代码
		 * @return 
		 * List<HouseListResult>
	 */
	List<HouseListResult> querySellGoodHouse(String cityCode);
	
	/**
	 * 
		 * 首页租房推荐查询,显示4个靓房最后修改的靓房排在最前边
		 * @Description: 首页租房推荐查询
		 * @param cityCode 城市代码
		 * @return 
		 * List<HouseListResult>
	 */
	List<HouseListResult> queryRentGoodHouse(String cityCode);
	
	/**
	 * @Description: 查询城市下的热门小区  
	 * @param cityCode 城市代码
	 * @param limit 显示条数
	 * @return: List<HotCommunity>
	 */
	List<HotCommunity> queryHotCommunitys(String cityCode,int limit);
	
	/**用户注册接口   
	 * @Description: 用户注册接口 
	 * @param CustCustomerParam 用户信息
	 * @return: 
	 */
	public boolean  saveCustCustomer(CustCustomerParam CustCustomerParam);
	/**
	 * @Description: 查询开通的城市信息   
	 * @return: List<OpenCity>
	 */
	List<OpenCity> queryOpenCitys(); 
	
	/**
	 * 
		 * 查询网站关于我们、联系我们、用户协议的详细信息
		 * @Description: 查询网站关于我们、联系我们、用户协议的详细信息
		 * @param bottomContentEnum 内容类型
		 * @return 
		 * ArticleInfoResult
	 */
	WebProtocolResult queryArticle(BottomContentEnum bottomContentEnum);
	/**
	 * 
		 * 查询网站联系我们列表
		 * @Description: 查询网站联系我们列表
		 * @return 
		 * List<ContactUsResult>
	 */
	List<ContactUsResult> queryContactUs(); 
	//TODO 登录接口
    public boolean customerLogin(HttpServletRequest request,HttpServletResponse response,String mobile,String password,String validateCode);
    /**
     * @Title: customerLoginout   
     * @Description: 退出登陆
     * @return: void
     * @throws UnsupportedEncodingException 
     */
    public void customerLoginout(HttpServletRequest request ,HttpServletResponse response);
    /**
     * @Title: customerMobileLogin   
     * @Description: 短信登陆
     * @param request
     * @param response
     * @param mobile 手机号码
     * @param solt 短信验证码
     * @return: boolean
     */
    public boolean customerMobileLogin(HttpServletRequest request,HttpServletResponse response,String mobile,String solt);
    /**
     * @Title: updateCustCustomer   
     * @Description: 修改用户信息
     * @param custCustomerEntity
     * @return: boolean
     */
    public boolean updateCustCustomer(CustCustomerEntity custCustomerEntity);
    /**
     * @Title: sendMobileMsgVerfyCode   
     * @Description: 发送短息号码   
     * @param mobile 手机号码
     * @return: String
     */
    public String sendMobileMsgVerfyCode(String mobile);
    //TODO 头部图片接口
	
	//TODO 新房推荐接口
	
	//TODO 微店宝图片接口
	
}
