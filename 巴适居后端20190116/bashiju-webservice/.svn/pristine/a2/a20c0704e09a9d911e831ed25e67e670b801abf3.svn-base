package com.bashiju.www.service.newhouse.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.alibaba.fastjson.JSON;
import com.bashiju.enums.HouseTransactionEnum;
import com.bashiju.enums.pc.ConditionTypeEnum;
import com.bashiju.webservice.mapper.ArticleMapper;
import com.bashiju.webservice.mapper.CommMapper;
import com.bashiju.webservice.mapper.HouseMapper;
import com.bashiju.webservice.mapper.NewHouseMapper;
import com.bashiju.wutils.exception.BusinessException;
import com.bashiju.wutils.exception.ErrorCodeEnum;
import com.bashiju.wutils.log.ExecutionResult;
import com.bashiju.wutils.log.SystemServiceLog;
import com.bashiju.wutils.redis.ICacheService;
import com.bashiju.wutils.util.Md5EncryptUtils;
import com.bashiju.www.global.WebGlobal;
import com.bashiju.www.pojo.comm.WebPage;
import com.bashiju.www.pojo.service.input.house.HouseMapListParam;
import com.bashiju.www.pojo.service.input.house.HouseMapParam;
import com.bashiju.www.pojo.service.input.house.HouseSameParam;
import com.bashiju.www.pojo.service.input.house.HouseTipOffParam;
import com.bashiju.www.pojo.service.input.house.RentHouseParam;
import com.bashiju.www.pojo.service.input.house.SellHouseParam;
import com.bashiju.www.pojo.service.out.article.RentSkillLinkResult;
import com.bashiju.www.pojo.service.out.comm.ThemeResult;
import com.bashiju.www.pojo.service.out.comm.HouseTotalResult;
import com.bashiju.www.pojo.service.out.comm.MetroStationResult;
import com.bashiju.www.pojo.service.out.house.AgentResult;
import com.bashiju.www.pojo.service.out.house.CommunityResult;
import com.bashiju.www.pojo.service.out.house.GoodHouseListResult;
import com.bashiju.www.pojo.service.out.house.HouseCompareResult;
import com.bashiju.www.pojo.service.out.house.HouseDescriptionResult;
import com.bashiju.www.pojo.service.out.house.HouseFeedbackResult;
import com.bashiju.www.pojo.service.out.house.HouseImageResult;
import com.bashiju.www.pojo.service.out.house.HouseInfoResult;
import com.bashiju.www.pojo.service.out.house.HouseListResult;
import com.bashiju.www.pojo.service.out.house.HouseMapListResult;
import com.bashiju.www.pojo.service.out.house.HouseMapPointResult;
import com.bashiju.www.pojo.service.out.house.HouseSameLinkResult;
import com.bashiju.www.pojo.service.out.house.NewHouseDynamicResult;
import com.bashiju.www.pojo.service.out.house.OpenDateResult;
import com.bashiju.www.pojo.service.out.house.PresalePermitResult;
import com.bashiju.www.pojo.service.out.house.RentHouseInfoResult;
import com.bashiju.www.pojo.service.out.house.RoomTimeResult;
import com.bashiju.www.pojo.service.out.house.ShowedRecordResult;
import com.bashiju.www.pojo.service.out.newhouse.NewHouseInfoResult;
import com.bashiju.www.pojo.service.out.newhouse.NewHouseTypeList;
import com.bashiju.www.pojo.service.out.newhouse.SameNewHouseList;
import com.bashiju.www.service.comm.WebPageUtils;
import com.bashiju.www.service.house.IHouseService;
import com.bashiju.www.service.newhouse.INewHouseService;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.util.StringUtil;

/**
 * 
 *  新房楼盘服务类
 * @ClassName:  NewHouseServiceImpl   
 * @Description:   新房楼盘服务类
 * @author: liwen
 * @date:   2018年8月18日 下午3:53:21       
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目
 */
@SystemServiceLog(sourceType="二手房源查询服务") 
@Service
public class NewHouseServiceImpl implements INewHouseService {
	
	@Autowired
	NewHouseMapper newHouseMapper;
	@Autowired
	ArticleMapper articleMapper;
	@Autowired
	ICacheService cacheService;
	@Autowired
	CommMapper commMapper;
	
	
	final static ObjectMapper MAPPER=new ObjectMapper();
	@SystemServiceLog(operationType="查看房源详细")
	@Override
	public HouseInfoResult selectNewHouseDetailInfo(long id) {
		
		return null;
	}
	
	@SystemServiceLog(operationType="查询新房楼盘户型")
	@Override
	public List<NewHouseTypeList> selectNewHouseType(int newHouseId,int room) {
		String key = WebGlobal.NEWHOUSETYPE_REDIS_PREFIX+newHouseId+room;
		String newHousetypeStr =  cacheService.getCache(key);
		List<NewHouseTypeList> newHouseTypeList = new ArrayList<>();
		if(StringUtils.isNoneEmpty(newHousetypeStr)) {
			newHouseTypeList = JSON.parseArray(newHousetypeStr, NewHouseTypeList.class);
		}else {
			newHouseTypeList = newHouseMapper.selectNewHouseType(newHouseId,room);
			cacheService.saveCache(key,newHouseTypeList,WebGlobal.OTHER_EXPTIME);
		}
		
		return newHouseTypeList;
	}
	
	@SystemServiceLog(operationType="查询新房楼盘户型有分页的")
	@Override
	public WebPage<NewHouseTypeList> selectNewHouseType(int newHouseId,int room,int page,int limit) {
		String key = "selectNewHouseType"+newHouseId+room+page+limit;
		key=Md5EncryptUtils.md5Encrypt(key);
		String newHousetypeStr=cacheService.getCache(key);
		if (StringUtils.isEmpty(newHousetypeStr)) {
			PageHelper.startPage(page, limit);
			Page<NewHouseTypeList> result=newHouseMapper.selectNewHouseTypeForPage(newHouseId,room);			
			System.out.println("------"+result.getResult());
			if (result!=null) {
				WebPage<NewHouseTypeList> value=new WebPage<>(result);
				cacheService.saveCache(key,value,WebGlobal.OTHER_EXPTIME);
				return value;
			}
			return null;
		}
		WebPage<NewHouseTypeList> result=WebPageUtils.parseWebPage(newHousetypeStr, NewHouseTypeList.class);
		return result;
	}
	
	@SystemServiceLog(operationType="查询新房楼盘详情")
	@Override
	public NewHouseInfoResult selectNewHouseInfo(int newHouseId) {
		String key = WebGlobal.NEWHOUSEINFO_REDIS_PREFIX+newHouseId;
		String newHouseInfoStr =  cacheService.getCache(key);
		NewHouseInfoResult newHouseInfo = null;
		if(StringUtils.isNoneEmpty(newHouseInfoStr)) {
			newHouseInfo = JSON.parseObject(newHouseInfoStr, NewHouseInfoResult.class);
		}else {
			newHouseInfo = newHouseMapper.selectNewHouseInfo(newHouseId);
			cacheService.saveCache(key,newHouseInfo,WebGlobal.OTHER_EXPTIME);
		}
		return newHouseInfo;
	}
	
	@SystemServiceLog(operationType="查看新房详细相似楼盘")
	@Override
	public List<SameNewHouseList> querySameNewHouseList(int avgPrice,int limit) {
		String key = WebGlobal.NEWHOUSE_DETAILED_SAME_REDIS_PREFIX;
		key = key+avgPrice;
		String newHouseStr =  cacheService.getCache(key);
		List<SameNewHouseList> newHouseList = new ArrayList<>();
		if(StringUtils.isNoneEmpty(newHouseStr)) {
			newHouseList = JSON.parseArray(newHouseStr, SameNewHouseList.class);
		}else {
			newHouseList = newHouseMapper.querySameNewHouseList(avgPrice,limit);
			cacheService.saveCache(key,newHouseList,WebGlobal.OTHER_EXPTIME);
		}
		return newHouseList;
	}
	


	/**
	 * 
	 * 条件查询楼盘动态
	 * @Description: 条件查询楼盘动态
	 * @param  projectId 新房楼盘详情动态
	 * @return List<NewHouseDynamicResult>
	 */
	
	@Override
	public List<NewHouseDynamicResult> queryNewHouseDynamicByProjectId(String projectId) {
		if(StringUtils.isEmpty(projectId))
			throw new BusinessException("新房楼盘详情编号不能为空");
		List<NewHouseDynamicResult> map = newHouseMapper.queryNewHouseDynamicByProjectId(projectId);
		return map;
	}
	/**
	 *  条件查询预售证信息
	 * @Title: queryPresalePermitByProjectId   
	 * @Description: 条件查询预售证信息
	 * @param projectId 楼盘编号
	 * @return: List<PresalePermitResult>
	 */
	@Override
	public List<PresalePermitResult> queryPresalePermitByProjectId(String projectId) {
		if(StringUtils.isEmpty(projectId))
			throw new BusinessException("新房楼盘详情编号不能为空");
		List<PresalePermitResult> result = newHouseMapper.queryPresalePermitByProjectId(projectId);
		return result;
	}

	/**
	 *  条件查询交房时间信息
	 * @Title: queryRoomTimeByPorjectId   
	 * @Description: 条件查询交房时间信息
	 * @param projectId 楼盘编号
	 * @return:List<RoomTimeResult>
	 */
	
	@Override
	public List<RoomTimeResult> queryRoomTimeByPorjectId(String projectId) {
		if(StringUtils.isEmpty(projectId))
			throw new BusinessException("新房楼盘详情编号不能为空");
		List<RoomTimeResult> roomTime = newHouseMapper.queryRoomTimeByProjectId(projectId);
		return roomTime;
	}


	/**
	 *  条件查询开盘时间信息
	 * @Title: queryOpenDateByProjectId   
	 * @Description: 条件查询开盘时间信息
	 * @param projectId 楼盘编号
	 * @return: List<OpenDateResult>
	 */
	@Override
	public List<OpenDateResult> queryOpenDateByProjectId(String projectId) {
		if(StringUtils.isEmpty(projectId))
			throw new BusinessException("新房楼盘详情编号不能为空");
		List<OpenDateResult> openDate = newHouseMapper.queryOpenDateByProjectId(projectId);
		return openDate;
	}

}
