
package com.bashiju.webservice.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.bashiju.www.pojo.service.agent.Agent;
import com.bashiju.www.pojo.service.agent.AgentAbility;
import com.bashiju.www.pojo.service.agent.AgentAbilityIdentification;
import com.bashiju.www.pojo.service.agent.AgentCustEvaluate;
import com.bashiju.www.pojo.service.agent.AgentDeail;
import com.bashiju.www.pojo.service.agent.AgentQueryParams;
import com.bashiju.www.pojo.service.agent.BuyAndSellingRate;
import com.bashiju.www.pojo.service.agent.CommunityBestAgent;
import com.bashiju.www.pojo.service.agent.CustStarRating;
import com.bashiju.www.pojo.service.agent.DealEfficiency;
import com.bashiju.www.pojo.service.agent.DealTransactionInfo;
import com.bashiju.www.pojo.service.agent.PieChart;
import com.bashiju.www.pojo.service.agent.ServiceTravel;
import com.bashiju.www.pojo.service.agent.SetGuestMessage;
import com.github.pagehelper.Page;
/**  
 * 经纪人详情映射接口
 * All rights Reserved, Designed By www.bashiju.com
 * @Title:  AgentMapper.java   
 * @Package com.bashiju.webservice.mapper   
 * @Description:经纪人详情映射接口
 * @author: wangpeng     
 * @date:   2018年7月28日 下午5:21:13   
 * @version V1.0 
 * @Copyright: 2018 www.bashiju.com Inc. All rights reserved. 
 * 注意：本内容仅限于云南巴士居网络服务公司内部传阅，禁止外泄以及用于其他的商业项目*/

public interface AgentMapper {
	
	/**
	 * 条件查询经纪人详情信息
	 * @Title: queryAgentDeailByAgentId   
	 * @Description: 条件查询经纪人详情信息
	 * @param agentId 经纪人编号
	 * @return: AgentDeail
	 */
	public  AgentDeail queryAgentDeailByAgentId(@Param("agentId")String agentId);
	
	
	
	/**
	 * 条件查询经纪人能力概括
	 * @Title: queryAgentAbilityByAgentId   
	 * @Description: 条件查询经纪人能力概括
	 * @param agentId 经纪人id
	 * @return: AgentAbility
	 */
	public List<AgentAbility> queryAgentAbilityByAgentId(@Param("agentId")String agentId);
	
	/**
	 * 条件查询客户对经纪人户评价
	 * @Title: queryUserRatingByAgentId   
	 * @Description: 条件查询客户对经纪人户评价
	 * @param agentId 经纪人id
	 * @return: List<UserRating>
	 */
	public List<CustStarRating> queryUserRatingByAgentId(@Param("agentId")String agentId);

	/**
	 * 条件查询经纪人能力认定
	 * @Title: queryAgentAbilityIdentificationByAgentId   
	 * @Description: 条件查询经纪人能力认定   
	 * @param agentId 经纪人id
	 * @return: List<AgentAbilityIdentification> 
	 */
	public List<AgentAbilityIdentification> queryAgentAbilityIdentificationByAgentId(@Param("agentId")String agentId);
	
	/**
	 * 添加用户对经纪人留言   
	 * @Title: saveGuestMessage   
	 * @Description: 添加用户对经纪人留言   
	 * @param setGuestMessage 留言内容
	 */
	public void saveGuestMessage(SetGuestMessage setGuestMessage);
	
	/**
	 *  条件查询成交信息 
	 * @Title: queryDealTransactionInfoByTraderId   
	 * @Description: 条件查询成交信息 
	 * @param traderId 成交人id
	 * @return: Page<DealTransactionInfo>
	 */
	public Page<DealTransactionInfo>  queryDealTransactionInfoByTraderId(@Param("traderId")String traderId);
	
	/**
	 * 查询服务行程   
	 * @Title: queryServiceTravel   
	 * @Description: 查询服务行程   
	 * @param userId 经纪人系统编号
	 * @return: List<ServiceTravel>
	 */
	public List<ServiceTravel> queryServiceTravel(@Param("userId")String userId);
	/**
	 * 条件查询经纪人列表信息  
	 * @Description: 条件查询经纪人列表信息  
	 * @param params 查询条件
	 * @return: Page<Agent>    
	 */ 
	public List<Agent> queryAgents(AgentQueryParams params);
	
	/**
	 * 查询条件列表 
	 * @Description: 查询条件列表   
	 * @return: List<Map<String,String>>
	 */
	public List<Map<String,String>> queryQueryConditions();


	/**
	 * 查询小区内最优的4个经纪人
	 * @Description: 查询小区内最优的4个经纪人   
	 * @param communityId 小区编号
	 * @return: List<CommunityBestAgent>      
	 */ 
	public List<CommunityBestAgent> queryCommunityBestAgent(@Param("communityId")String communityId);



	/**     
	 * 查询经纪人的客户评价详情 
	 * @Description: 查询经纪人的客户评价详情  
	 * @param userId 经纪人系统编号
	 * @return: List<AgentCustEvaluate>      
	 */ 
	public List<AgentCustEvaluate> queryCustEvaluateDetails(@Param("userId")String userId);



	/**
	 * 查询经纪人历史成交价格饼图   
	 * @Description: 查询经纪人历史成交价格饼图   
	 * @param userId 经纪人系统编号
	 * @return: List<PieChart>      
	 */ 
	public List<PieChart> queryDealPriceDistribution(@Param("userId")String userId);



	/**
	 * 查询经纪人历史成交面积饼图
	 * @Description: 查询经纪人历史成交面积饼图   
	 * @param userId 经纪人系统编号
	 * @return: List<PieChart>    
	 */ 
	public List<PieChart> queryDealSpaceDistribution(@Param("userId")String userId);



	/**
	 * 查询经纪人历史成交居室饼图
	 * @Description: 查询经纪人历史成交居室饼图   
	 * @param userId 经纪人系统编号
	 * @return: List<PieChart>  
	 */ 
	public List<PieChart> queryDealRoomDistribution(@Param("userId")String userId);
	
	/**
	 * 查询经纪人买卖比例信息   
	 * @Description: 查询经纪人买卖比例信息   
	 * @param userId 经纪人系统编号
	 * @return: BuyAndSellingRate
	 */
	public BuyAndSellingRate queryAgentBuyAndSellingRate(@Param("userId")String userId);
	
	/**
	 * 查询经纪人成交效率信息
	 * @Description: 查询经纪人成交效率信息   
	 * @param userId 经纪人系统编号
	 * @return: DealEfficiency
	 */
	public DealEfficiency queryDealEfficiency(@Param("userId")String userId);
}
