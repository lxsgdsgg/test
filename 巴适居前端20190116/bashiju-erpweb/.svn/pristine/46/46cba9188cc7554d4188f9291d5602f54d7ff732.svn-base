<template>
  <div class="page-content">
    <div class="page-content-hd">
      <el-form :model="queryForm" ref="queryForm" :inline="true" size="small">
        <!--<el-form-item prop="transferStatus">-->
          <!--<el-select v-model="queryForm.transferStatus" style="width: 100px;" placeholder="成交状态">-->
            <!--<el-option label="有效" value="0"></el-option>-->
            <!--<el-option label="结案" value="1"></el-option>-->
            <!--<el-option label="违约" value="2"></el-option>-->
          <!--</el-select>-->
        <!--</el-form-item>-->
        <el-form-item prop="houseUses">
          <el-select v-model="queryForm.houseUses" placeholder="房源用途" style="width: 100px;" clearable>
            <el-option
              v-for="item in houseUsesEnum"
              :key="item.value"
              :label="item.name"
              :value="item.value"
            ></el-option>
          </el-select>
        </el-form-item>
        <el-form-item prop="dateType">
          <el-select v-model="queryForm.dateType" style="width: 130px;" placeholder="时间类型" clearable>
            <el-option label="成交时间" value="0"></el-option>
            <el-option label="过户结案时间" value="1"></el-option>
            <el-option label="佣金结案时间" value="2"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item prop="dealTime">
          <el-date-picker
            type="daterange"
            range-separator="—"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            v-model="queryForm.dealTime"
            value-format="yyyy-MM-dd"
            style="width: 220px"
            :default-value="timeSpace"
            clearable
          >
          </el-date-picker>
        </el-form-item>
        <el-form-item prop="traderType">
          <el-select v-model="queryForm.traderType" style="width: 100px;" placeholder="用户类型" clearable>
            <el-option label="成交人" value="0"></el-option>
            <el-option label="权证人" value="1"></el-option>
            <el-option label="录入人" value="2"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item prop="personId">
          <base-cascader
            v-model="queryForm.personId"
            :url="getReferenceUserSelectUrl"
            :props="cascaderProps"
            :dataProps="cascaderDataProps"
            placeholder="选择用户"
            style="width: 100px;"
            :changeOnSelect="false"
            @change="jurgeUser"
            clearable
          >
          </base-cascader>
        </el-form-item>

        <el-form-item prop="deptId">
          <dept-select
            v-model="queryForm.deptId"
            placeholder="选择部门"
            style="width: 100px;"
            :changeOnSelect="false"
            @change="jurgeDept"
            clearable
          ></dept-select>
        </el-form-item>

        <el-form-item prop="transferStatus">
          <el-select v-model="queryForm.transferStatus" style="width: 100px;" placeholder="过户状态" clearable>
            <el-option label="未启动" value="00"></el-option>
            <el-option label="过户中" value="01"></el-option>
            <el-option label="已完成" value="02"></el-option>
          </el-select>
        </el-form-item>

        <el-form-item prop="buildSpace">
          <base-section-select
            v-model="queryForm.buildSpace"
            :data="regionValue.space"
            placeholder="面积区间"
            description="平米"
            style="width: 160px;"
            clearable
          >
          </base-section-select>
        </el-form-item>
        <el-form-item prop="price">
          <base-section-select
            v-model="queryForm.price"
            :data="regionValue.sell"
            placeholder="价格区间"
            description="万元"
            style="width: 170px;"
            clearable
          >
          </base-section-select>
        </el-form-item>
        <el-form-item prop="vagueData">
          <base-vague-autocomplete
            class="w300" style="width: 230px;"
            :dataProps="vagueQueryInfo"
            v-model="queryForm.vagueData" @select="handleSelectInfo"
            placeholder="成交编号,合同编号,房源编号,客源编号,业主,客户,小区,门牌号"
            clearable
          >
          </base-vague-autocomplete>
        </el-form-item>

          <el-button type="primary" @click="_loadData(true)" :loading="loadingQueryBtn" size="small">查询</el-button>
          <el-button type="info" @click="resetForm" size="small">清空</el-button>
          <el-button v-hasOnlyBtn="'exportAllBtn'" type="success" size="small">导出全部</el-button>
          <el-button v-hasOnlyBtn="'exportCurrBtn'" type="success" size="small">导出当前页</el-button>
      </el-form>
    </div>

    <div class="page-content-hd">
      <div class="operates clearfix">
        <slot></slot>
        <el-button v-hasOnlyBtn="'defineBtn'" size="mini" class="pull-right" @click="dialogVisible=true" style="margin-top:-15px;,margin-bottom:10px;">自定义列表</el-button>
      </div>
      <el-table
        :data="tableData"
        border
        size="small"
        align="center"
        tooltip-effect="light"
        v-loading="loadingView"
        style="margin-top: 5px;"
      >
        <template v-for="(fruit, index) in _formThead">
          <el-table-column
            width="90"
            v-if="fruit.prop === 'addTime' || fruit.prop === 'updateTime'
              || fruit.prop === 'allFollowTime'
              || fruit.prop === 'mainterFllowTime'
              || fruit.prop === 'dealTime'"
            :key="index" :label="fruit.label && fruit.label" :align="fruit.align && fruit.align" show-overflow-tooltip
          >
            <template slot-scope="scope">
              {{$utils.timeFormat(scope.row[fruit.prop])}}
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='agreementStatus'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{showDealStatus(scope.row)}}
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop === 'transferStatus'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span v-if="scope.row[fruit.prop] === '00'">{{returntransferStatus(scope.row[fruit.prop])}}</span>
              <span v-if="scope.row[fruit.prop] === '01'" style="color: #42b983">{{returntransferStatus(scope.row[fruit.prop])}}</span>
              <span v-if="scope.row[fruit.prop] === '02'" style="color: #3399ff">{{returntransferStatus(scope.row[fruit.prop])}}</span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='isDivide'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop] === 1 ? '已分成':'未分成'}}
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='isLoan'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop] === 1 ? '有贷款':'无贷款'}}
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='price'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop]/1000000}}万元
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='commissionPrice'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop]/100}}元
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='actualCommission'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop]/100}}元
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='receivedPrice'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{scope.row[fruit.prop]/100}}元
              </span>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop==='waitReceivedPrice'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <span>
                {{(scope.row.actualCommission - scope.row.receivedPrice)/100}}元
              </span>
            </template>
          </el-table-column>
          <!--<el-table-column v-else-if="fruit.prop==='action'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"-->
                           <!--:align="fruit.align && fruit.align" show-overflow-tooltip fixed="right">-->
            <!--<template slot-scope="scope">-->
              <!--<el-button type="button" size="small" @click="confirmDealInfo(scope.row)" style="color: forestgreen">确认</el-button>-->
              <!--<el-button type="button" size="small" @click="rebackDealInfo(scope.row)" style="color: #e0000f">驳回</el-button>-->
            <!--</template>-->
          <!--</el-table-column>-->

          <el-table-column v-else-if="fruit.prop === 'houseId'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <a @click="toHouseDetail(scope.row)"
                 href="javascript:;" class="dealId" type="text">
                {{scope.row[fruit.prop]}}
              </a>
            </template>
          </el-table-column>

          <el-table-column v-else-if="fruit.prop === 'demandId'" :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <a @click="toDemandDetail(scope.row)"
                 href="javascript:;" class="dealId" type="text">
                {{scope.row[fruit.prop]}}
              </a>
            </template>
          </el-table-column>

          <el-table-column v-else :key="index" :label="fruit.label && fruit.label" :width="fruit.width && fruit.width"
                           :align="fruit.align && fruit.align" show-overflow-tooltip>
            <template slot-scope="scope">
              <a @click="toDetail(scope.row)"
                href="javascript:;" class="dealId" v-if="fruit.prop === 'id'" type="text">
                {{scope.row[fruit.prop]}}
              </a>

              <span v-else>
                {{ scope.row[fruit.prop] }}
              </span>
            </template>
          </el-table-column>

        </template>
      </el-table>
      <!--分页控件-->
      <b-pagination
        :listQuery="listQuery"
        @handleSizeChange="handleSizeChange"
        @handleCurrentChange="handleCurrentChange">
      </b-pagination>

      <el-dialog :visible.sync="dialogVisible" title="自定义列表" width="600px">
        <div>
          <el-checkbox-group v-model="checkboxVal">
            <el-checkbox style="margin-left: 0; margin-right: 20px; margin-bottom: 20px" v-for="(opt, index) in formTheadOptions" :key="index" :label="opt">{{opt}}</el-checkbox>
          </el-checkbox-group>

          <div class="btn-group" style="margin-top: 10px">
            <el-button type="primary" :loading="loadingSubmitBtn" @click="saveTableColHidden" size="small">保存</el-button>
            <el-button @click="dialogVisible = false" size="small">取消</el-button>
          </div>
        </div>
      </el-dialog>
    </div>
  </div>
</template>

<script>
  import PageList from '@/mixins/pageList'
  import * as RequestURL from '@/request/deal/businessTransactionDeal'
  import BaseVagueAutocomplete from '@/components/BaseVagueAutocomplete'
  import BaseCascader from '@/components/BaseCascader'
  import * as selectUrl from '@/request/manage/common' // 获取下拉框数据 url地址
  import DealDetail from './component/DealDetail'
  import DeptSelect from '@/components/BaseCascader/dept'
  import BaseSectionSelect from '@/components/BaseSectionSelect'

  import * as consts from '@/views/deal/bussinessDeal/component/constants'
  import {setTableColHidden, getTableColHiddenList} from '@/request/house/houseUsed'
  import {queryCommunitySelectWithRegion, getRegionValue} from '@/request/app'

  // 模糊查询其他  门牌号 电话 编号..
  const vagueQueryInfo = [
    {label: '成交编号', type: 1},
    {label: '合同编号', type: 2},
    {label: '房源编号', type: 3},
    {label: '客源编号', type: 4},
    {label: '业主', type: 5},
    {label: '客户', type: 6},
    {label: '小区', type: 7},
    {label: '门牌号', type: 8},
  ]

  export default {
    name: "oneHandDeal",
    mixins: [PageList],
    components: {BaseVagueAutocomplete,BaseCascader,DealDetail,consts,DeptSelect,BaseSectionSelect},
    data(){
      return {
        timeSpace: '',
        loadingView: false,
        loadingQueryBtn: false,
        queryForm:{
          transferStatus: '',
          houseUses:'',
          traderType: '',
          dateType: '',
          dealTime: '',
          personId: '',
          deptId: '',
          referenceIdId: '',
          operatorId: '',
          dealId: '',
          agreementId: '',
          demandId: '',
          owner: '',
          custName: '',
          communityName: '',
          buildingHouseName: '',
          vagueData: '',
          buildSpace: '',
          price: ''
        },
        loadingSubmitBtn: false,
        vagueData: {},
        houseUsesEnum: '',
        vagueQueryInfo: vagueQueryInfo,
        getReferenceUserSelectUrl: selectUrl.getReferenceUserSelectUrl,
        cascaderDataProps: {id: 'code', parent: 'parentCode'},
        cascaderProps: {
          value: 'code',
          label: 'name'
        },
        dialogVisible: false,
        formThead: consts.ONE_HAND_FORM_THEAD,
        _formThead: [],
        checkboxVal: [],
        formTheadOptions: consts.ONE_HAND_FORM_THEAD.map(item => item.label),
        dealId: '',
        detailData: '',
        regionValue: {
          sell: {},
          rent: {},
          space: {}
        } // 区间下拉数据
      }
    },
    methods:{
      jurgeUser(value,name,data){
        if (data.dataType !== 'user') {
          this.$message({
            showClose: true,
            type: 'warning',
            message: '只能选择用户!'
          })
          setTimeout(() => {
            this.queryForm.personId = ''
          }, 50)
        }
      },
      jurgeDept(value,name,data){
        if (data.dataType !== 'dept') {
          this.$message({
            showClose: true,
            type: 'warning',
            message: '只能选择部门!'
          })
          setTimeout(() => {
            this.queryForm.deptId = ''
          }, 50)
        }
      },
      showDealStatus(row){
        if(row.isBreach === '1'){
          return '违约'
        }else if(row.isFinishCase === '1'){
          return '结案'
        }else{
          return '有效'
        }
      },
      // 获取区间下拉数据
      _getRegionValue () {
        // 获取售价区间
        const sellParams = {
          widgetCode: 'sellPriceRange',
          tag: 2
        }
        getRegionValue(sellParams).then(res => {
          this.regionValue.sell = res.data || []
        })

        // 获取租价区间
        const rentParams = {
          widgetCode: 'rentPriceRange',
          tag: 2
        }
        getRegionValue(rentParams).then(res => {
          this.regionValue.rent = res.data || []
        })

        // 获取租价区间
        const spaceParams = {
          widgetCode: 'spaceRange',
          tag: 2
        }
        getRegionValue(spaceParams).then(res => {
          this.regionValue.space = res.data || []
        })
      },



      // 点击其他信息输入建议项赋值
      handleSelectInfo (item) {
        // 点击坐栋输入建议项赋值
        this.vagueData = {
          type: item.type,
          value: item.value,
        }
      },
      returntransferStatus(value){
        if(value==='00'){
          return '未启动'
        }else if(value === '01'){
          return '过户中'
        }else if(value === '02'){
          return '已完成'
        }
      },

      _loadData(btnQuery){
        if(btnQuery){
          this.listQuery.page = 1
          this.listQuery.currentPage = 1
        }

        let params = Object.assign({},{...this.queryForm},{
          page: this.listQuery.page,
          limit: this.listQuery.limit
        })
        params.vagueData = this.vagueData
        params.dealType = '02'

        if(params.dealTime && !params.dateType){
          this.$message({
            type: 'warning',
            message: '请先选择起时间类型'
          })
          return false
        }

        if(params.dateType){
          if(!params.dealTime){
            this.$message({
              type: 'warning',
              message: '请选择起止时间'
            })
            return
          }
          if(params.dateType === '0'){//成交时间
            params.beginDealTime = params.dealTime[0]
            params.endDealTime = params.dealTime[1]
          }else if(params.dateType === '1'){//合同结案时间
            params.beginFinishCaseTime = params.dealTime[0]
            params.endFinishCaseTime = params.dealTime[1]
          }else if(params.dateType === '2'){//佣金结案时间
            params.beginCommissionFinishTime = params.dealTime[0]
            params.endCommissionFinishTime = params.dealTime[1]
          }
        }

        if(!params.traderType && params.personId) {
          this.$message({
            type: 'warning',
            message: '请先选择用户类型'
          })
          return
        }

        if(params.traderType){
          if(!params.personId){
            this.$message({
              type: 'warning',
              message: '请选择用户'
            })
            return
          }
          if(params.traderType === '0'){ //成交人
            params.traderId = params.personId
          }else if(params.traderType === '1'){//权证人
            params.referenceIdId = params.personId
          }else if(params.traderType === '2'){//录入人
            params.operatorId = params.personId
          }else{}
        }

        if(params.deptId && !params.traderType){
          this.$message({
            type: 'warning',
            message: '请先选择用户类型'
          })
          return
        }

        if(params.deptId){
          if(params.traderType === 0){ //成交人部门
            params.traderDeptId = params.deptId
          }else if(params.traderType === 1){//权证人部门
            params.referenceDeptId = params.deptId
          }else if(params.traderType === 2){//录入人部门
            params.operatorDeptId = params.deptId
          }else{

          }
        }

        if(params.price){
          params.minprice = params.price.min * 1000000
          params.maxprice = params.price.max * 1000000
        }
        if(params.buildSpace){

          params.minBuildSpace = params.buildSpace.min
          params.maxBuildSpace = params.buildSpace.max
        }

        if(params.vagueData){
          switch (params.vagueData.type) {
            case 1:
              params.dealId = params.vagueData.value
              break
            case 2:
              params.agreementId = params.vagueData.value
              break
            case 3:
              params.houseId = params.vagueData.value
              break
            case 4:
              params.demandId = params.vagueData.value
              break
            case 5:
              params.owner = params.vagueData.value
              break
            case 6:
              params.custName = params.vagueData.value
              break
            case 7:
              params.communityName = params.vagueData.value
              break
            case 8:
              params.buildingHouseName = params.vagueData.value
              break
            default:
              break
          }
        }

        delete params.vagueData
        delete params.price
        delete params.buildSpace
        delete params.traderType
        delete params.personId
        delete params.dealTime
        delete params.dateType
        delete params.deptId

        this.loadingView = true
        if(btnQuery){
          this.loadingQueryBtn = true
        }
        RequestURL.queryBussinessTransactionDealPageList(params).then(res=>{
          this.tableData = res.data
          this.listQuery.total = res.count
          this.loadingView = false
          this.loadingQueryBtn = false
        }).catch(err=>{
          console.log(err)
          this.loadingView = false
          this.loadingQueryBtn = false
        })
      },

      // 获取页面的枚举信息
      queryDealEnum(){
        RequestURL.queryDealEnum().then(res=>{
          this.houseUsesEnum = res.houseUsesEnum
        })
      },
      resetForm(){
        if(this.$refs['queryForm']){
          this.$refs['queryForm'].resetFields()
          this.vagueData = {}
          this.queryForm.dealTime = ''
        }
        this.returnNowDate()
      },
      // 保存table自定列表
      saveTableColHidden () {
        this.loadingSubmitBtn = true
        let valArr = this.checkboxVal
        let hiddenCols = []
        this.formThead.forEach(item => {
          if (valArr.indexOf(item.label) === -1) hiddenCols.push(item.prop)
        })

        let params = {
          formName: 'oneHandDeal',
          columns: hiddenCols.join()
        }

        setTableColHidden(params).then(() => {
          this.$message({
            type: 'success',
            message: '操作成功'
          })
          this.loadingSubmitBtn = false
          this.dialogVisible = false
        }).catch(() => {
          this.loadingSubmitBtn = false
        })
      },
      // 设置选中
      setCheckboxVal () {
        getTableColHiddenList({formName: 'oneHandDeal'}).then(res => {
          if (res.data.columns && res.data.columns.length) {
            let columns = res.data.columns
            this.formThead.forEach(item => {
              if (columns.indexOf(item.prop) === -1) {
                this.checkboxVal.push(item.label)
              }
            })
          }
        })
      },
      // 进入客源详细
      toDemandDetail(row){
        this.$router.push({ path: '/customer/customerDetail/' + row.demandId
          ,  query: {formName: row.houseUsesId + '_customer', transactionTypeId: 1}})
      },
      // 进入房源详细
      toHouseDetail(row){
        this.$router.push({ path: '/house/houseUsedDetail/' + row.shhid + '/' + row.houseId, query: { formName: row.houseUsesId}})
      },

      toDetail (row) {
        this.dealId = row.id
        this.$router.push({ path: './oneHandDealDetail/' + row.id})
      },

      // // 确认买卖成交信息
      // confirmDealInfo(row){
      //   this.$confirm('确定要提交数据吗？','提示',{
      //     confirmButtonText: '确定',
      //     cancelButtonText: '取消',
      //     type:'warning'
      //   }).then(()=>{
      //     let params = {dealId : row.id,dealType: '02',moneyType:row.moneyType}
      //     console.log(row)
      //     RequestURL.sureDividInfos().then(res=>{
      //
      //     })
      //   }).catch(()=>{
      //     this.$message({
      //       type: 'info',
      //       message: '已取消'
      //     })
      //   })
      //
      // },

      // 驳回成交信息
      rebackDealInfo(row){
        let params = {id : row.id}
        RequestURL.delete
      },
      returnNowDate (){
        let showDate =new Date()
        let seperator ='-'
        let year = showDate.getFullYear()
        let month = showDate.getMonth() + 1
        let day =showDate.getDate()
        var strDate = showDate.getDate()
        if (month >= 1 && month <= 9) {
          month = "0" + month
        }
        if (strDate >= 0 && strDate <= 9) {
          strDate = "0" + strDate
        }
        let startdate = year + seperator + (month-1) + seperator + strDate
        let enddate = year + seperator + month + seperator + strDate
        this.timeSpace = [startdate,enddate]//日期区间
      }
    },
    created () {
      this._formThead = this.formThead.concat()
      this.setCheckboxVal()
    },
    mounted(){
      this.returnNowDate()
      this.queryDealEnum()
      this._getRegionValue()
    },
    watch:{
      // 监听查询 如果当前输入的内容和之前绑定的输入建议不一致 则说明没有点击建议项 赋默认值
      'queryForm.vagueData': function (newValue) {
        if (!newValue) {
          this.vagueData = {}
          return
        }

        let defaultVal = {
          type: vagueQueryInfo[0].type,
          value: newValue,
        }

        if (this.vagueData) {
          if (newValue !== this.vagueData) {
            this.vagueData = defaultVal
          }
        } else {
          // 没有点击过输入建议项
          this.vagueData = defaultVal
        }
      },
      checkboxVal(valArr) {
        let cls = []
        this.formTheadOptions.forEach(i => {
          if (valArr.indexOf(i) >= 0) {
            this.formThead.forEach(item => {
              if (item.label === i) cls.push(item)
            })
          }
        })
        this._formThead = cls
        this.key = this.key + 1// 为了保证table 每次都会重渲
      }
    }
  }
</script>

<style scoped lang="scss">
  .dealId {
    color: #409eff;
    &:hover {
      text-decoration: underline;
    }
  }
</style>
