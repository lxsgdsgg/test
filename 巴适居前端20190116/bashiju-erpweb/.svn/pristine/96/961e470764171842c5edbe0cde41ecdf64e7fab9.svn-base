<template>
  <div>
    <el-form :model="form" :rules="rules" ref="form" label-width="100px">

      <el-form-item label="角色名称" prop="name">
        <el-input v-model="form.name" placeholder="请输入角色名称"></el-input>
      </el-form-item>

      <el-form-item label="角色组" prop="groups">
        <el-select style="width: 100%" v-model="form.groups" placeholder="请选择角色组">

          <template v-for="item in roleGroupOpts">
            <el-option
              v-if="item.value === '01'"
              :disabled="roleGroup === '02' || roleGroup === '03'"
              :key="item.label"
              :label="item.label"
              :value="item.value"
            >
            </el-option>

            <el-option
              v-if="item.value === '02'"
              :disabled="roleGroup === '03'"
              :key="item.label"
              :label="item.label"
              :value="item.value"
            >
            </el-option>

            <el-option
              v-if="item.value === '03'"
              :key="item.label"
              :label="item.label"
              :value="item.value"
            >
            </el-option>
          </template>

        </el-select>
      </el-form-item>

      <el-form-item label="所属公司" prop="companyId">
        <el-select style="width: 100%" v-model="form.companyId">
          <el-option
            v-for="item in companyOpts"
            :key="item.id"
            :label="item.name"
            :value="item.id"
          >
          </el-option>
        </el-select>

      </el-form-item>

      <el-form-item label="排序码" prop="sortNo">
        <el-input-number style="width: 100%" v-model="form.sortNo" :min="0"></el-input-number>
      </el-form-item>

      <el-form-item class="margin-b-none">
        <el-button type="primary" :loading="loadingBtn" @click="handleSubmit">确认</el-button>
        <el-button @click="handleCancel">取消</el-button>
      </el-form-item>

    </el-form>
  </div>
</template>

<script>
import {saveOrUpdateRole} from '@/request/manage'
import {
  queryCompanySelectData
} from '@/request/manage/deptmanage'
import BaseCompanySelect from '@/components/BaseSelect/companySelect'

export default {
  name: 'RoleEdit',
  components: {BaseCompanySelect},
  props: {
    data: {
      type: Object
    },
    isAdd: {
      type: Boolean
    },
    roleGroup: {
      required: true
    }
  },
  data () {
    return {
      form: {
        name: '',
        groups: '',
        companyId: '',
        sortNo: ''
      },
      rules: {
        name: [
          {required: true, message: '请输入名称', trigger: 'blur'}
        ],
        sortNo: [
          {required: true, message: '请输入排序码', trigger: 'blur'}
        ],
        groups: [
          {required: true, message: '请选择角色组', trigger: 'change'}
        ],
        companyId: [
          {required: true, message: '请选择所属公司', trigger: 'change'}
        ]
      },
      roleGroupOpts: [
        {
          value: '01',
          label: '超级管理员'
        },
        {
          value: '02',
          label: '城市管理员'
        },
        {
          value: '03',
          label: '普通用户'
        }
      ],
      companyOpts: [],
      loadingBtn: false,
      originalFormData: {}
    }
  },
  methods: {
    handleCancel () {
      this.$emit('handleClick', 2)
    },
    handleSubmit () {
      this.$refs['form'].validate((valid) => {
        if (valid) {
          let params = {...this.form}
          !this.isAdd ? params.id = this.data.id : params.id = ''

          this.$confirm('确定保存编辑的信息吗?', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            this.loadingBtn = true
            saveOrUpdateRole({jsonData: JSON.stringify(params)}).then(res => {
              this.$message({
                type: 'success',
                message: res.msg
              })
              this.loadingBtn = false
              this.$emit('handleClick', 1)

              // 向后台传递日志数据
              if (this.isAdd) {
                let message = {
                  sourceCode: params.name, // 资源标识
                  sourceTypeId: this.$DICT_CODE.LOG.SOURCE_TYPE.MANAGE.ROLE, // 资源类型
                  operatTypeId: this.$DICT_CODE.LOG.OPERATE_TYPE.ADD, // 操作类型
                  logContent: `新增角色：${params.name}` // 日志内容
                }
                this.$updateLog.manage.manageAddLog({message: JSON.stringify(message)})
              } else {

                let message = {
                  sourceCode: params.name, // 资源标识
                  sourceTypeId: this.$DICT_CODE.LOG.SOURCE_TYPE.MANAGE.ROLE, // 资源类型
                  operatTypeId: this.$DICT_CODE.LOG.OPERATE_TYPE.UPDATE, // 操作类型
                  labelData: this.$utils.getFormFields(this.$refs['form']), // 修改字段对应的label
                  originalData: this.originalFormData, // 原始表单对象
                  newData: params // 修改后的表单对象
                }
                this.$updateLog.manage.manageUpdateLog({message: JSON.stringify(message)})

              }

            }).catch(() => {
              this.loadingBtn = false
            })
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '取消!'
            })
          })
        }
      })

      // this.$emit('handleClick', 1)
    },

    _getCompanyDataSelect: function () {
      queryCompanySelectData({}).then((res) => {
        this.companyOpts = res
      }).catch(err => {
        console.log(err)
      })
    },

    _setForm (data) {
      this._resetForm()
      for (let i in this.form) {
        if (data[i]) {
          this.form[i] = data[i]
        }
      }
    },
    _resetForm () {
      this.$refs['form'] && this.$refs['form'].resetFields()
    }
  },
  mounted () {
    this._resetForm()

    this._getCompanyDataSelect()
    // 不为新增 表单赋值
    if (!this.isAdd) {
      this.originalFormData = Object.assign({}, this.data)
      this._setForm(this.data)
    }
  },
  watch: {
    data: {
      deep: true,
      handler () {
        if (this.data) {
          this._setForm(this.data)
        }
      }
    }
  }
}
</script>

<style lang="scss" scoped>
</style>
