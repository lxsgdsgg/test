<template>
  <div class="page-content">
    <div class="page-content-hd">
      <div class="query-form">
        <el-form size="small" ref="queryForm" :inline="true" :model="queryForm" class="demo-form-inline">
          <el-form-item label="" prop="status">
            <el-select v-model="queryForm.status" placeholder="请选择状态" >
              <el-option
                v-for="item in selectStatus"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
          </el-form-item>

          <el-form-item label="" prop="houseId">
            <el-input v-model="queryForm.houseId" placeholder="资源编号"></el-input>
          </el-form-item>

          <el-form-item>
            <el-button type="primary" @click.native.prevent="handleQuery" :loading="loadingQueryBtn">查询</el-button>
            <el-button @click.native.prevent="_resetForm('queryForm')">重置</el-button>
          </el-form-item>

        </el-form>
      </div>
    </div>
    <div class="page-content-bd" v-loading="loadingView">
      <el-table
        :data="tableData"
        border
        align="center"
        style="width: 100%"
        height="580"
      >

        <el-table-column
          prop="sourceTypeName"
          align="center"
          label="资源类型">
        </el-table-column>

        <el-table-column
          align="center"
          label="资源编号">
          <template slot-scope="scope">
           <a
              @click="toDetail(scope.row.sourceId, scope.row.houseUsesId, scope.row.houseId,scope.row.sourceType)"
              href="javascript:;" class="houseId"  type="text"
            >
              {{scope.row.houseId}}
            </a>
         </template>
        </el-table-column>

        <el-table-column
          prop="tipOffType"
          align="center"
          label="举报原因">
        </el-table-column>

        <el-table-column
          prop="content"
          align="center"
          label="举报内容">
        </el-table-column>

        <el-table-column
          prop="realName"
          align="center"
          label="处理人">
        </el-table-column>

        <el-table-column
          prop="handleTime"
          align="center"
          :formatter="_timeFormat"
          label="处理时间">
        </el-table-column>

        <el-table-column
          prop="handleContent"
          align="center"
          label="处理结果">
        </el-table-column>

        <el-table-column
          prop="statusName"
          align="center"
          label="处理状态">
        </el-table-column>

        <el-table-column
          align="center"
          label="操作"
        >
          <template slot-scope="scope">

            <el-button v-hasMultipleBtn="['custTipoffHandleBtn',scope.row]" v-if="scope.row.status==0"   @click="handleEdit(scope.row)" type="text" size="small">处理</el-button>

          </template>
        </el-table-column>

      </el-table>

      <b-pagination
        :listQuery="listQuery"
        @handleSizeChange="handleSizeChange"
        @handleCurrentChange="handleCurrentChange">
      </b-pagination>
    </div>



    <template>
      <b-dialog :show.sync="dialogAddVisible" title="处理结果" width="350px" height="600px">
        <el-form v-loading="loadingForm" :model="addForm" status-icon :rules="addFormRules" ref="addForm" label-width="100px">
          <el-form-item label="处理结果" prop="handleResult">
            <el-input v-model="addForm.handleResult"></el-input>
          </el-form-item>
          <el-form-item class="margin-b-none">
            <el-button type="primary" :loading="loadingSubmitBtn" @click="handleSubmit">确认</el-button>
            <el-button @click="dialogAddVisible=false">取消</el-button>
          </el-form-item>

        </el-form>
      </b-dialog>
    </template>

  </div>
</template>

<script>
  import PageList from '@/mixins/pageList' // 列表页面查询 mixin
  import * as RequestURL from '@/request/manage/contentManage' // 请求后端URL路径
  import {getSelectValue} from '@/request/app'
  export default {
    name: 'custTipoff',
    mixins: [PageList],
    data () {
      return {
        queryForm: {},
        selectStatus: [
          {
            value: '0',
            label: '未处理'
          }, {
            value: '1',
            label: '已处理'
          }
        ],
        selectType: [],
        addForm: {},
        // 表单校验配置
        addFormRules: {
          handleResult: [
            {required: true, message: '请输入结果', trigger: 'blur'}
          ]
        },
        dialogAddVisible: false,
        loadingSubmitBtn: false,
        loadingForm: false,
        currentRowData: null, // 当前操作的行数据
        currentDynamicConfigureItem:null,
        nowQueryForm: {}
      }
    },
    methods: {
      toDetail (id, name, code,type) {
        console.log(id)
        console.log(name)
        console.log(code)
        if(type==0){
            this.$router.push({ path: '/house/houseUsedDetail/' + id + '/' + code, query: { formName: name}})
            let houseList = []
            let item = {
              id: id
            }
            houseList.push(item)
            window.localStorage.setItem('houseList', JSON.stringify(houseList))
        }else{

        }
        
      },
      //举报类型
      getType(){
          const params = {
            param: 'tipoff',
          }
          getSelectValue(params).then(res => {
            this.selectType = res.data || []
          })
      },
      
      // 填写处理结果
      handleEdit (row) {
        this._resetForm('addForm')
        this.currentRowData = row
        this.dialogAddVisible = true
      },

      // 提交
      handleSubmit () {

        this.$refs['addForm'].validate((valid) => {
          if (valid) {
            const params = {
              id: this.currentRowData.id,
              handleResult: this.addForm.handleResult,
              type: 'custTipoff'
            }
            this.$confirm('确定保存编辑的信息吗？, 是否继续?', {
              confirmButtonText: '确定',
              cancelButtonText: '取消',
              type: 'warning'
            }).then(() => {
              this.loadingSubmitBtn = true
              RequestURL.saveHandleResult(params).then(res => {
                this.loadingSubmitBtn = false
                this.dialogAddVisible = false
                if (res.success) {
                  this.$message({
                    type: 'success',
                    message: res.msg || '操作成功'
                  })
                  this._loadData(false);
                }else{
                  this.$message({
                    type: 'warning',
                    message: res.msg
                  })
                }
              }).catch((err) => {
                console.log(err);
                this.loadingSubmitBtn = false
                this.$message({
                  type: 'info',
                  message: err.msg || '保存失败'
                })
              })
            })

          }
        })
      },
       handleQuery () {
        this.nowQueryForm = Object.assign({}, this.queryForm)
        this.listQuery.page = 1
        this.listQuery.currentPage = 1
        this._loadData(true)
      },
      // 加载数据
      _loadData (btnQuery) {
        if (btnQuery) {
          this.loadingQueryBtn = true
        }

        this.loadingView = true
        let params = Object.assign({}, this.nowQueryForm, {
          limit: this.listQuery.limit,
          page: this.listQuery.page
        })
        //const params = this._getParams(this.queryForm)
        RequestURL.getCustTipoff(params).then(res => {
          this.tableData = res.data.map(item => {
                if(item.sourceType=='0'){
                  item.sourceTypeName='二手房'
                }else if(item.sourceType=='1'){
                  item.sourceTypeName='新房'
                }
                if(item.status==0){
                  item.statusName='未处理'
                }else if(item.status==1){
                  item.statusName='已处理'
                }
                 
                 return item
             })
          console.log(this.tableData);
          this.listQuery.total = res.count
          this.loadingQueryBtn = false
          this.loadingView = false

        }).catch(() => {
          this.loadingQueryBtn = false
          this.loadingView = false
        })
      },



    },
    mounted () {
      this.getType();

    }
  }
</script>

<style scoped lang="scss">
  .houseId {
    color: #409eff;
    &:hover {
      text-decoration: underline;
    }
  }
</style>
