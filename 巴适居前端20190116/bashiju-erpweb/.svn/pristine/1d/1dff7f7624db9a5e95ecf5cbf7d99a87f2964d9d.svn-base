<template>
  <div style="height: 500px;overflow: auto">
    <div id="showBuilding">
      <p>已选择==>{{this.oneBuildingData.name}}{{this.oneBuildingData.buildUnitAlias}}==>{{this.oneUnitData.name}}{{this.oneUnitData.unitAlias}}</p>
      <br>
      <el-row :gutter="0">
        <el-col :span="3">
          <el-table
            :data="buildingData"
            align="left" border
            style="width: 100%;color:#66b1ff;"
            @row-click="queryBuildingUnitListByBuildingIdWhenClickTable"
            @cell-mouse-leave="cellMouseLeave"
            @cell-mouse-enter="cellMouseEnter"
            height="450"
          >
            <el-table-column
              label="座栋名称"
              prop="name"
              align="left"
            >
              <template slot-scope="scope">
                {{scope.row.name + scope.row.buildUnitAlias}}
              </template>
            </el-table-column>
          </el-table>
        </el-col>

        <el-col :span="3">
          <el-table
            :data="unitData"
            align="left"
            border style="width: 100%;color:#66b1ff;"
            @row-click="queryHouseDataByBuildingId"
            @cell-mouse-leave="cellMouseLeave"
            @cell-mouse-enter="cellMouseEnter"
            height="450"
          >
            <el-table-column
              label="单元名称"
              prop="name"
              align="left"
            >
              <template slot-scope="scope">
                {{scope.row.name + scope.row.unitAlias}}
              </template>
            </el-table-column>
          </el-table>
        </el-col>

        <div>
          <el-col :span="18">
            <el-table align="center" border style="width: 100%;" :data="showHouseData"
                      height="450"
                      v-loading="loadingView" @cell-dblclick="doubleClickReturn" @cell-mouse-leave="cellMouseLeave"
                      @cell-mouse-enter="cellMouseEnter">
              <el-table-column
                align="center"
                v-for="(item,index) in unitHouseCount"
                :label="'第'+ item +'户'"
                :key="index"
                :prop="'houseNumber' + item"
              >
              </el-table-column>
            </el-table>
          </el-col>
        </div>
      </el-row>
    </div>
  </div>
</template>

<script>

  import * as BuildingUnit from '@/request/manage/community'
  import PageList from '@/mixins/pageList'
  import { queryBuildingsByCommunityId } from '@/request/manage/community'

  export default {
    name: "BuildingUnitComponent",
    mixins:[PageList],
    props:{
      data:{
        // 包含：buildingId：座栋ID，buildingsName：座栋名称，buildingAlias：座栋别名
        type: Object,
        default(){
          return null
        }
      },
      // 小区ID
      communityId:{
        type: [String, Number],
        default(){
          return ''
        }
      }
    },
    data(){
      return {
        loadingView: false,
        buildingData:[],
        unitData: [],
        houseData: Object,
        showHouseData: [],
        unitHouseCount: '',
        oneUnitData: '',
        oneBuildingData: '',
        retObj: {},
        floorTotal: ''
      }
    },
    methods:{
      // 双击单元格时出发此方法
      doubleClickReturn(row, column, cell, event){
        console.log(row);
        this.retObj = {}
        this.retObj.buildingId = this.oneBuildingData.id
        this.retObj.buildingName = this.oneBuildingData.name
        this.retObj.buildUnitAlias = this.oneBuildingData.buildUnitAlias
        this.retObj.unitId = this.oneUnitData.id
        this.retObj.unitName = this.oneUnitData.name
        this.retObj.unitAlias = this.oneUnitData.unitAlias
        this.retObj.houseNo = row[column.property]
        this.retObj.houseId = row[this.retObj.houseNo]
        this.retObj.floor = row.floor
        this.retObj.floorTotal = this.floorTotal;
        this.$emit('dbCellClick', this.retObj)
      },
      // 鼠标进入单元格时出发
      cellMouseEnter (row, column, cell, event) {
        let el = event.target
        this.$utils.addClass(el, 'cellActive')
      },
      // 鼠标离开单元格时出发
      cellMouseLeave () {
        let el = event.target
        this.$utils.removeClass(el, 'cellActive')
      },
      // 根据座栋ID查询单元信息
      queryBuildingUnitListByBuildingId(id){
        let params = {bid:id,
            page: this.listQuery.page,limit: this.listQuery.limit
        }
        BuildingUnit.queryBuildingUnitListByBuildingId(params).then(res=>{
          this.unitData = res.data
          this.unitHouseCount = this.unitData[0].unitHouseCount
          this.oneUnitData = this.unitData[0]
          this.queryHouseDataByBuildingId(this.unitData[0])
          console.log(this.oneUnitData)
        }).catch(err=>{
          this.$message({
            type: 'error',
            message: err.data.msg
          })
        })
      },

      // 根据座栋ID查询单元信息 --座栋信息表的点击事件响应
      queryBuildingUnitListByBuildingIdWhenClickTable(row){
        this.oneBuildingData = row
        let params = {bid:row.id,
          page: this.listQuery.page,limit: this.listQuery.limit
        }
        BuildingUnit.queryBuildingUnitListByBuildingId(params).then(res=>{
          this.unitData = res.data
          this.unitHouseCount = this.unitData[0].unitHouseCount
          this.oneUnitData = this.unitData[0]
          this.queryHouseDataByBuildingId(this.unitData[0])
        }).catch(err=>{
          this.$message({
            type: 'error',
            message: err.data.msg
          })
        })
      },

      // 根据单元ID查询房屋信息
      queryHouseDataByBuildingId(row){
        this.floorTotal = row.floorTotal
        let tempDataObj = []
        let params = {buildingUnitId: row.id}
        this.oneUnitData = row
        this.loadingView = true
        this.showHouseData = []
        BuildingUnit.queryUnitsByBuildingId(params).then(res=>{
          this.houseData = res.data
          for(let i in this.houseData){
            let datas = this.houseData[i].datas
            let floor = this.houseData[i].floor
            let tempData = datas.split(",")
            let result = {}
            for(let j in tempData){
              if(tempData[j]){
                let secondTemp = tempData[j]
                let key = 'houseNumber'.concat(++j)
                let houseNo = secondTemp.split(';')
                result[key] = houseNo[0]
                result[houseNo[0]] = houseNo[1]
              }
            }
            result['floor'] = floor
            this.showHouseData.unshift(result)
          }
          this.showHouseData.sort(this.up)
          this.loadingView = false
        }).catch(err=>{
          console.log(err)
          this.loadingView = false
        })
      },
      //按升序排列
      up(x,y){
        return x.floor-y.floor
      },

      // 根据小区ID查询座栋列表
      queryBuildingsByCommunityId(){
        let params = Object.assign({},{cid: this.communityId},{page: 0,limit: 0})
        queryBuildingsByCommunityId(params).then(res=>{
          this.buildingData = res.data
          this.oneBuildingData = this.buildingData[0]
          this.queryBuildingUnitListByBuildingId(this.buildingData[0].id)
        }).catch(err=>{
          console.log(err)
        })
      }
    },
    mounted(){
      this.buildingData = []
      if(this.communityId){
        this.queryBuildingsByCommunityId()
      }else{
        this.queryBuildingUnitListByBuildingId(this.data.id)
        this.buildingData[0] = this.data
        this.oneBuildingData = this.data
      }
    },

    // watch: {
    //   communityId () {
    //     if (this.communityId) {
    //       debugger
    //       this.queryBuildingsByCommunityId()
    //     }
    //   },
    //
    //   data: {
    //     deep: true,
    //     handler () {
    //       this.queryBuildingUnitListByBuildingId(this.data.id)
    //       this.buildingData[0] = this.data
    //       this.oneBuildingData = this.data
    //     }
    //   }
    // },
  }
</script>

<style scoped>

</style>
