<!-- 价格 -->

<template>
  <div style="min-height: 550px">
    <el-button v-if="btnPermission[PERMISSION_BTN.ADD_PRICE]" @click="handleAdd" type="primary" plain icon="el-icon-circle-plus" size="small">新增</el-button>

    <el-table
      :data="tableData"
      v-loading="loadingView"
    >
      <el-table-column
        prop="price"
        label="价格">
        <template slot-scope="scope">
          {{scope.row.price + '元'}}
        </template>
      </el-table-column>
      <el-table-column
        prop="addTime"
        :formatter="_timeFormat"
        label="新增日期">
      </el-table-column>

      <el-table-column
        prop="descs"
        label="价格描述"
        show-overflow-tooltip
      >
      </el-table-column>
      <el-table-column
        prop="operator"
        label="操作人">
      </el-table-column>
      <el-table-column
        label="操作"
        width="200"
      >
        <template slot-scope="scope">
          <el-button v-if="btnPermission[PERMISSION_BTN.UPDATE_PRICE]" @click="handleEdit(scope.row)" icon="el-icon-edit" size="mini">编辑</el-button>
          <el-button v-if="btnPermission[PERMISSION_BTN.DELETE_PRICE]" @click="handleDelete(scope.row)" icon="el-icon-delete" size="mini">删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <b-pagination
      :listQuery="listQuery"
      @handleSizeChange="handleSizeChange"
      @handleCurrentChange="handleCurrentChange">
    </b-pagination>

    <el-dialog
      title="新增/编辑"
      :visible.sync="dialogVisible"
      width="400px"
      :close-on-click-modal="false"
      :close-on-press-escape="false"
    >

      <el-form ref="form" :model="form" :rules="rules" size="medium" label-width="100px">

        <el-form-item label="价格" prop="price">
          <el-input v-model.number="form.price"></el-input>
        </el-form-item>

        <el-form-item label="描述" prop="descs">
          <el-input style="width: 100%" type="textarea" v-model="form.descs"></el-input>
        </el-form-item>

        <el-form-item class="margin-b-none">
          <el-button @click="handleSubmit" type="primary">保存</el-button>
          <el-button @click="dialogVisible = false">取消</el-button>
        </el-form-item>
      </el-form>

    </el-dialog>
  </div>
</template>

<script>
  import PageList from '@/mixins/pageList' // 列表页面查询 mixin
  import constMixin from './constMixin'
  import {queryPropertyPriceTrendByProjectId, delPropertyPriceTrendByProjectId, saveOrUpdatePropertyPriceTrend} from '@/request/house/houseNew'

  export default {
    mixins: [PageList, constMixin],

    props: {
      projectId: {
        type: [Number, String]
      }
    },

    data () {
      return {
        dialogVisible: false,
        currentRowData: null,
        isAdd: true,
        form: {
          price: '',
          descs: ''
        },
        rules: {
          price: [
            { required: true, message: '必填项', trigger: 'blur' },
            { type: 'number', required: true, message: '必须为数字值', trigger: 'blur' },
          ]
        }
      }
    },

    methods: {
      handleAdd () {
        this.currentRowData = null
        this._resetForm('form')
        this.dialogVisible = true
      },

      handleSubmit () {
        this.$refs['form'].validate(valid=> {
          if (valid) {
            this.$confirm('确定保存编辑的信息?',
              {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
              }
            ).then(() => {
              let params = {...this.form}
              let operate = ''

              params.projectId = this.projectId

              if (this.currentRowData) {
                params.id = this.currentRowData.id
                operate = 319
              } else {
                operate = 318
              }

              saveOrUpdatePropertyPriceTrend({jsonData: JSON.stringify(params)}).then(() => {
                this.$message({
                  type: 'success',
                  message: '操作成功',
                  showClose: true,
                  duration: 2000
                })
                this.dialogVisible = false
                this._getTableData()

                // 向后台传递日志数据
                let message = {
                  sourceId: this.projectId, // 资源ID
                  sourceCode: this.sourceCode, // 资源编号
                  businessTypeId: this.$DICT_CODE.LOG.BUSINESS_TYPE.NEW_HOUSE, // 业务类型
                  operatTypeId: operate, // 操作类型
                  logContent: `价格：${this.form.price}, 描述：${this.form.descs}`
                }
                this.$updateLog.house.houseQueryLog({message: JSON.stringify(message)})

              })
            })
          }
        })
      },

      handleEdit (row) {
        this._resetForm('form')

        this.currentRowData = row
        this.dialogVisible = true

        this.$nextTick(() => {
          this.setFormInfo()
        })
      },

      setFormInfo () {
        let data = this.currentRowData
        let form = this.form

        Object.keys(form).forEach(key => {
          if (data[key] !== 'undefined' && data[key] !== null) {

            form[key] = data[key]

          }
        })
      },

      handleDelete (row) {
        this.$confirm('确定删除该条数据吗?', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          delPropertyPriceTrendByProjectId({id: row.id, projectId: this.projectId}).then(res => {
            this.$message({
              type: 'success',
              message: res.msg
            })
            this._getTableData()

            // 向后台传递日志数据
            let message = {
              sourceId: this.projectId, // 资源ID
              sourceCode: this.sourceCode, // 资源编号
              businessTypeId: this.$DICT_CODE.LOG.BUSINESS_TYPE.NEW_HOUSE, // 业务类型
              operatTypeId: 320, // 操作类型
              logContent: `删除价格`
            }
            this.$updateLog.house.houseQueryLog({message: JSON.stringify(message)})
          })
        })
      },

      _getTableData () {
        this.loadingView = true
        const params = this._getParams({
          projectId: this.projectId,
        })
        queryPropertyPriceTrendByProjectId(params).then(res => {
          this.tableData = res.data
          this.listQuery.total = res.count
          this.loadingView = false
        }).catch(() => {
          this.loadingView = false
        })
      }
    },
  }
</script>

<style scoped lang="scss">

</style>
