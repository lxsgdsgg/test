<template>
  <div class="page-content">
    <div class="page-content-hd">
      <el-form :model="queryForm" ref="queryForm" :inline="true" size="small">
        <el-form-item label="备注信息" prop="keyWord">
          <el-input v-model="queryForm.keyWord" type="text"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click.native.prevent="_loadData(true)" :loading="loadingQueryBtn">查询</el-button>
          <el-button @click="resetForm('queryForm')">清空</el-button>
          <el-button v-hasOnlyBtn="'phoneBlacklistAdd'" type="primary" @click.native.prevent="submitHandler">新增</el-button>
        </el-form-item>
      </el-form>

    </div>

    <div class="page-content-hd">
      <el-table border align="center" :data="tableData" v-loading="loadingView">
        <el-table-column label="姓名" align="left" prop="name" width="200px"></el-table-column>
        <el-table-column label="电话号码" align="left" prop="mobile" width="200px"></el-table-column>
        <el-table-column label="备注信息" align="left" prop="remark"></el-table-column>
        <el-table-column label="操作区域" align="center" width="100px">
          <template slot-scope="scope">
            <el-button v-hasMultipleBtn="['editBtn',scope.row]" @click="handlerEdit(scope.row)" size="small" type="text">编辑</el-button>
            <el-button v-hasMultipleBtn="['delBtn',scope.row]" @click="deletePhoneBlackList(scope.row)" size="small" type="text">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <!--分页控件-->
      <b-pagination
        :listQuery="listQuery"
        @handleSizeChange="handleSizeChange"
        @handleCurrentChange="handleCurrentChange">
      </b-pagination>

      <b-dialog
        title="电话黑名单编辑"
        :show.sync="editDlgVisible"
        close-on-click-modal="false"
        top="15vh"
        width="20%">
        <el-form :model="editForm" ref="editForm" label-width="100px" :rules="rules">
          <el-form-item label="用户名称" prop="name">
            <el-input v-model="editForm.name" type="text"></el-input>
          </el-form-item>

          <el-form-item label="电话号码" prop="mobile">
            <el-input v-model="editForm.mobile" type="mobile"></el-input>
          </el-form-item>

          <el-form-item label="备注信息" prop="remark">
            <el-input v-model="editForm.remark" type="text"></el-input>
          </el-form-item>

          <el-form-item>
            <div class="btn-group">
              <el-button @click="savePhoneBlackListData" type="primary" :loading="saveLoadingBtn">保存</el-button>
              <el-button @click="handleCancel" type="primary">取消</el-button>
            </div>
          </el-form-item>

        </el-form>
      </b-dialog>

    </div>
  </div>
</template>

<script>
  import PageList from '@/mixins/pageList'
  import * as RequestURL from '@/request/manage'

  export default {
    name: "phoneBlacklist",
    mixins: [PageList],
    data() {
      // 自定义电话验证
      let legalPhone = (rule, value, callback) => {
        let reg = /^1[3|4|5|7|8][0-9]\d{8}$/
        if(!value){
          return callback(new Error('电话号码不能为空'))
        }
        if (reg.test(value)) {
          callback();
        }
        return callback(new Error('请输入正确的电话号码'));
      }

      return {
        saveLoadingBtn: false,
        editDlgVisible: false,
        tableData: [],
        loadingView: false,
        isAdd: true,
        queryForm: {
          keyWord: ''
        },
        editForm:{
          id: '',
          name: '',
          mobile: '',
          remark: ''
        },
        rules:{
          name:{required: true,message: '该项为必填项',trigger: blur},
          mobile:{ validator: legalPhone, trigger: 'blur' },
          remark:{required: true,message: '该项为必填项',trigger: blur}
        }
      }
    },
    methods:{
      // 取消操作
      handleCancel() {
        this.editDlgVisible = false
      },

      // 添加电话黑名单
      submitHandler(){
        this.$nextTick(()=>{
          this.resetForm('editForm')
          this.setForm('')
          this.editDlgVisible = true
        })
      },
      // 编辑电话黑名单
      handlerEdit(row){
        this.$nextTick(()=>{
          this.resetForm('editForm')
          this.setForm(row)
          this.editDlgVisible = true
        })
      },

      // 设置表单数据
      setForm(data){
        for(let i in this.editForm){
          this.editForm[i] = data[i]
        }
      },

      /**
       * 查询电话黑名单数据信息
       * @param btnQuery
       * @private
       */
      _loadData(btnQuery){
        if(btnQuery){
          this.loadingQueryBtn = true
          this.listQuery.page = 1
          this.listQuery.currentPage = 1
        }
        this.loadingView = true
        let params = Object.assign({},this.queryForm,{
          page: this.listQuery.page,
          limit: this.listQuery.limit
        })
        RequestURL.queryPhoneBlacklistData(params).then(res=>{
          this.tableData = res.data
          this.listQuery.total = res.count
          this.loadingView = false
          this.loadingQueryBtn = false
        }).catch(err=>{
          this.$message({
            type: 'error',
            message: err.data.msg
          })
          this.loadingView = false
          this.loadingQueryBtn = false
        })
      },

      // 保存中介黑名单数据
      savePhoneBlackListData(){
        this.$refs['editForm'].validate((valid)=>{
          if(valid){
            this.$confirm('确定要保存吗？','提示',{
              confirmButtonText: '',
              cancelButtonText: '',
              type: 'warning'
            }).then(()=>{
              let params = {...this.editForm}
              this.saveLoadingBtn = true
              RequestURL.savePhoneBlackList({jsonData: JSON.stringify(params)}).then(res=>{
                if(res.success){
                  this.$message({
                    type: 'success',
                    message: res.msg
                  })
                  this.editDlgVisible = false
                  this._loadData(false)
                }else{
                  this.$message({
                    type: 'error',
                    message: res.msg
                  })
                }
                this.saveLoadingBtn = false
                this.editDlgVisible = false
              }).catch(err=>{
                this.saveLoadingBtn = false
                console.log(err)
                this.$message({
                  type: 'error',
                  message: err.data.msg
                })
              })
            })
            //   .catch(()=>{
            //   this.$message({
            //     type: 'info',
            //     message: '用户取消操作'
            //   })
            // })
          }
        })
      },

      // 重置表单
      resetForm(formName){
        if(this.$refs[formName]){
          this.$refs[formName].resetFields()
        }
      },

      // 删除费用项目
      deletePhoneBlackList(row){
        this.$confirm('确定要删除此数据吗？','提示',{
          confirmButtonText: '',
          cancelButtonText: '',
          type: 'warning'
        }).then(()=>{
          RequestURL.deletePhoneBlackList({id: row.id}).then(res=>{
            if(res.success){
              this.$message({
                type: 'success',
                message: res.msg
              })
              this._loadData(false)
            }else{
              this.$message({
                type: 'error',
                message: res.msg
              })
            }
          }).catch(err=>{
            console.log(err)
            this.$message({
              type: 'error',
              message: err.data.msg
            })
          })
        })
        //   .catch(()=>{
        //   this.$message({
        //     type: 'info',
        //     message: '用户取消操作'
        //   })
        // })
      },
    }
  }
</script>

<style scoped>

</style>
