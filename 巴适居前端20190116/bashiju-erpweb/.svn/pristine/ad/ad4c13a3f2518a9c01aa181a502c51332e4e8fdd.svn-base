<template>
  <div class="page-content">
    <div class="page-content-hd">
        <el-form size="small" :inline="true" :model="queryForm" ref="queryForm" class="demo-form-inline">
          <el-form-item  prop="transactionType">
            <el-select v-model="queryForm.transactionType" placeholder="客源交易类型">
                  <el-option label="求租" value="5"></el-option>
                  <el-option label="求购" value="4"></el-option>
            </el-select>
          </el-form-item>

            <el-form-item  prop="levelType">
              <el-select v-model="queryForm.levelType" placeholder="房屋等级">
                <el-option label="A等级" value="A"></el-option>
                <el-option label="B等级" value="B"></el-option>
              </el-select>
            </el-form-item>

          <el-form-item class="margin-b-none"  prop="cityCode">
            <base-city-cascader v-model="queryForm.cityCode" @click="handleSelectCity" placeholder="选择城市"></base-city-cascader>
          </el-form-item>

          <el-form-item>
            <el-button type="primary" @click.native.prevent="getResCustLevelConditionData(true)" :loading="queryBtnLoading">查询</el-button>
            <el-button @click.native.prevent="resetQueryForm">清空</el-button>
          </el-form-item>

          <el-form-item>
            <el-dropdown @command="handleAdd">
              <el-button  v-hasOnlyBtn="'addBtn'">
                新增<i class="el-icon-arrow-down el-icon--right"></i>
              </el-button>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item command="4">求购</el-dropdown-item>
                <el-dropdown-item command="5">求租</el-dropdown-item>
              </el-dropdown-menu>
            </el-dropdown>

          </el-form-item>

        </el-form>
    </div>

    <div class="page-content-bd" v-loading="loadingView">
      <el-table
        :data="tableData"
        border
        align="center"
        style="width: 100%"
      >

        <!--<el-table-column-->
          <!--prop="id"-->
          <!--align="left"-->
          <!--label="ID">-->
        <!--</el-table-column>-->


        <el-table-column
          prop="transactionType"
          align="left"
          label="房源交易类型">
          <template slot-scope="scope">
            <!--格式化-->
            {{scope.row.transactionType | validateTransactionType}}
          </template>

        </el-table-column>

        <el-table-column
          prop="levelType"
          align="left"
          label="等级"
        >
          <template slot-scope="scope">
            {{scope.row.levelType|validateLevelType}}
          </template>
        </el-table-column>

        <el-table-column
          prop="addTime"
          align="left"
          :formatter="_timeFormat"
          label="录入时间">
        </el-table-column>


        <el-table-column
          prop="name"
          align="left"
          label="方案名称">
        </el-table-column>

        <el-table-column
          prop="remark"
          :html="form.remark"
          align="left"
          label="条件"
          show-overflow-tooltip
        >

          <template slot-scope="scope">
            <div v-html="scope.row.remark"></div>
          </template>

        </el-table-column>

        <el-table-column
          align="center"
          label="操作"
        >
          <template slot-scope="scope">
            <el-button v-hasMultipleBtn="['editBtn',scope.row]" @click="handleEdit(scope.row)" type="text" size="small">编辑</el-button>
            <el-button v-hasMultipleBtn="['delBtn',scope.row]" @click="handleDelete(scope.row)" type="text" size="small">删除</el-button>
          </template>
        </el-table-column>

      </el-table>
      <!--分页控件-->
      <b-pagination
        :listQuery="listQuery"
        @handleSizeChange="handleSizeChange"
        @handleCurrentChange="handleCurrentChange">
      </b-pagination>

      <label style="color: gray">提示:</label>
      <div class="bor">
        <br>
        <div style="margin-left: 25px;color: gray">
          A、B级:有效且符合设置条件
          <br/>
          <br/>
          C级:有效且非A、B级
          <br/>
          <br/>
          D级: 非有效、待确认、我租、我售、他租、
          他售、未知、自住、出租中、空置、撤单、撤单
        </div>
      </div>
    </div>
    <!--编辑窗体-->
    <template>
        <el-dialog
          :title="dynamicTitle"
          :visible.sync="editorCustLevelConditionDialog"
          :close-on-click-modal="false"
          top="30vh"
          width="600px">
          <cust-level-condition-editor :data="currentRowData" :transactionType="transactionType" :isAdd="isAdd"  v-if="hackReset"  @handleClick="handEditorCustCondition"></cust-level-condition-editor>
        </el-dialog>
    </template>
  </div>
</template>

<style></style>
<script>
  import PageList from '@/mixins/pageList'
  import {getResCustLevelConditionData,delResCustLevelCondition} from "@/request/manage/resCustLevelCondition";
  import BaseCityCascader from '@/components/BaseCascader/city'
  import CustLevelConditionEditor from './component/custLevelConditionEditor'
  import  *  as  RequestLogUrl from '@/request/log/mangePlatformLog'

    export default {
      name:'resCustLevelCondition',
      mixins:[PageList],
      components:{BaseCityCascader,PageList,CustLevelConditionEditor},
        data() {
            return {
              queryForm:{
                transactionType:'',
                levelType:'',
                cityCode:''
              },
              dynamicTitle:null,//动态标题
              tableData:[],
              loadingView:false,
              queryBtnLoading:false,
              editorCustLevelConditionDialog:false,
              currentRowData:null,
              transactionType:'',
              isAdd:false,
              hackReset:false,
              listQuery:{
                limit:10,
                page:1,
                total:0
              }
            }
        },
        methods: {
          handleSelectCity(val,name){
          /*  this.queryForm.cityCode = val*/
          },
          //查询数据
          getResCustLevelConditionData(isLoading){
            if(isLoading){

              this.queryBtnLoading = isLoading
              this.listQuery.page = 1
              this.listQuery.currentPage = 1
            }
              this.loadingView = true
              let params = Object.assign({},this.queryForm,{
                limit:this.listQuery.limit,
                page:this.listQuery.page
              })
            getResCustLevelConditionData(params).then(res =>{
                this.tableData = res.data
                this.listQuery.total = res.count
                this.loadingView = false
                this.queryBtnLoading = false
              }).catch(error =>{
                console.log(error)
                this.loadingView = false
                this.queryBtnLoading = false
              })
          },
          //删除
          handleDelete(val){
            this.$confirm('确定要删除吗？',{
              confirmBtnText:'确定',
              cancelBtnText:'取消',
              type:'warning'

            }).then(() =>{
              let params = {id:val.id}
              delResCustLevelCondition(params).then(res =>{
                if(res.success){
                  this.$message({type:'success',message:res.msg})
                  let message = {
                    sourceCode:  val.name,//资源编号：客源编号
                    sourceTypeId:8,// 8：客源等级条件
                    operatTypeId: 3,//操作类型2: 表示修改,
                    logContent:'删除客源等级条件:'+val.name//日志内容
                  }
                  RequestLogUrl.manageDelLog({message:JSON.stringify(message)}).then(res=>{
                      console.log(res)
                  }).catch(error =>{
                      console.log(error)
                  })
                  this.getResCustLevelConditionData(false)
                }else{
                  this.$message({type:'success',message:'删除失败'})
                }
              }).catch(error =>{
                this.$message({
                  type:'info',
                  message:error.msg
                })
              })
            }).catch( () =>{
              this.$message({
                type:'info',
                message:'已取消'
              })
            })
          },
          //新增
          handleAdd(value){
            this.hackReset =false
            this.$nextTick(()=>{
              this.hackReset = true
              this.isAdd = true
              this.currentRowData = null
              if(value === 4){
                this.type = '求购'
              }else{
                this.type = '求租'
              }
              this.dynamicTitle =  '新增'+this.type+'客源等级条件'
              if(value == 4){
                this.transactionType = Number(value)
                this.editorCustLevelConditionDialog = true
              }else if(value == 5 ){
                this.transactionType = Number(value)
                this.editorCustLevelConditionDialog = true
              }
            })

          },
          //编辑
          handleEdit(row){
            this.hackReset = false
            this.$nextTick(() =>{
              this.hackReset = true;
              this.isAdd =false
              this.currentRowData = row
              this.dynamicTitle =  '修改客源等级条件'
              this.transactionType = Number(row.transactionType)
              this.editorCustLevelConditionDialog = true
            })
          },
          handEditorCustCondition(value){
            if(value && value == 1){
              this.editorCustLevelConditionDialog = false
              this.getResCustLevelConditionData(false)
            }else{
              if(value && value == 2){
                this.editorCustLevelConditionDialog = false
              }
            }
          },
          //清空搜索框
         resetQueryForm(){
           this.$refs['queryForm'].resetFields()
         },
         //格式化时间
          _timeFormat(row,culmn,cellValue){
            return this.$utils.timeFormat(cellValue)
          },
          _loadData(){
            this.getResCustLevelConditionData(false)
          }
        },
        filters:{
          validateTransactionType: function (transactionType) {
            if(transactionType==4 )return '求购'
            if(transactionType == 5) return '求租'
          },
          validateLevelType:function (levelType) {
            if(levelType == 'A')return 'A等级'
            if(levelType == 'B')return 'B等级'
          }
        }
        ,
        mounted() {
            this.getResCustLevelConditionData(false)
        }

    }

</script>
<style>
</style>
